{"version":3,"file":"static/js/100.a44154bd.chunk.js","mappings":"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","sources":["components/Breadcrumb/Breadcrumb.js","components/Form/ErrorMEssage.js","components/Form/Input.js","components/Form/Submit.js","redux/user/action.js","hooks/user/index.js","redux/role/action.js","hooks/role/index.js","pages/User/UserForm/UserFormValidation.js","pages/User/UserForm/UserForm.js","pages/User/UserForm/index.js"],"sourcesContent":["import { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nconst Breadcrumb = ({\n  breadcrumb,\n  title,\n  showButton,\n  buttonAction,\n  buttonText,\n}) => (\n  <div className=\"page-breadcrumb\">\n    <div className=\"row align-items-center\">\n      <div className=\"col-6\">\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb mb-0 d-flex align-items-center\">\n            {breadcrumb.map((b, key) => (\n              <Fragment key={key}>\n                {b.url && (\n                  <li className=\"breadcrumb-item\">\n                    <Link to={b.url} className=\"link\">\n                      {b.icon && <i className={b.icon}></i>}\n                      {b.icon && ' '}\n                      {b.name}\n                    </Link>\n                  </li>\n                )}\n                {!b.url && <li className=\"breadcrumb-item active\">{b.name}</li>}\n              </Fragment>\n            ))}\n          </ol>\n        </nav>\n        {title ? <h1 className=\"mb-0 fw-bold\">{title}</h1> : null}\n      </div>\n      <div className=\"col-6\">\n        {showButton ? (\n          <div className=\"text-end upgrade-btn\">\n            <Link to={buttonAction} className=\"btn btn-primary text-white\">\n              {buttonText}\n            </Link>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  </div>\n)\n\nexport default Breadcrumb\n\nBreadcrumb.defaultProps = {\n  breadcrumb: [],\n  title: '',\n  showButton: false,\n}\n\nBreadcrumb.propTypes = {\n  title: PropTypes.string,\n  breadcrumb: PropTypes.array,\n  className: PropTypes.string,\n  showButton: PropTypes.bool,\n  buttonAction: PropTypes.func,\n  buttonText: PropTypes.string,\n}\n","import PropTypes from 'prop-types'\n\nconst ErrorMEssage = ({error}) => error && <p className=\"text-danger mb-1\">{error.message}</p>\n\nexport default ErrorMEssage\n\nErrorMEssage.propTypes = {\n  error: PropTypes.object,\n}\n","import { forwardRef } from 'react';\nimport PropTypes from 'prop-types'\nimport ErrorMEssage from './ErrorMEssage';\n\nconst Input = forwardRef(({\n  type = 'text',\n  onChange,\n  placeholder,\n  name,\n  errors,\n  disabled = false\n}, ref) => (\n  <>\n    <input\n      ref={ref}\n      id={name}\n      name={name}\n      onChange={onChange}\n      type={type}\n      className={errors[name] ? 'form-control border border-danger' : 'form-control'}\n      placeholder={placeholder}\n      disabled={disabled}\n    />\n    <ErrorMEssage error={errors[name]} />\n  </>\n));\n\nInput.defaultProps = {\n}\n\nInput.propTypes = {\n  type: PropTypes.string,\n  onChange: PropTypes.func,\n  placeholder: PropTypes.string,\n  name: PropTypes.string,\n  errors: PropTypes.object,\n  disabled: PropTypes.bool,\n}\n\nInput.displayName = 'Input'\n\nexport default Input\n","import PropTypes from 'prop-types'\n\nconst Submit = ({label, loading, className = ''}) => (\n  <>\n    <button\n      type=\"submit\"\n      className={`submit-btn${className ? (' ' + className) : ''}`}\n      disabled={loading}\n    >\n      {label}\n      {loading ? (\n        <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n      ) : ''}\n    </button>\n  </>\n);\n\nexport default Submit\n\nSubmit.defaultProps = {}\n\nSubmit.propTypes = {\n  label: PropTypes.string,\n  loading: PropTypes.bool,\n  className: PropTypes.string,\n}\n","import {\n  GET_USERS_REQUEST,\n  RESET_USER,\n  GET_USER_DETAIL_REQUEST,\n  UPDATE_USER_REQUEST,\n  DELETE_USER_REQUEST,\n} from '../../constants/actionTypes';\n\nexport const getUsers = query => ({\n  type: GET_USERS_REQUEST,\n  payload: query\n});\n\nexport const resetUserState = () => ({\n  type: RESET_USER,\n});\n\nexport const getUserDetailRequest = (param) => ({\n  type: GET_USER_DETAIL_REQUEST,\n  payload: param\n});\n\nexport const updateUserRequest = (param) => ({\n  type: UPDATE_USER_REQUEST,\n  payload: param\n});\n\nexport const deleteUserRequest = (param) => ({\n  type: DELETE_USER_REQUEST,\n  payload: param\n});\n","import { useMemo } from 'react';\r\nimport {\r\n  useFailed,\r\n  useFetchByParam,\r\n  useQueryParams,\r\n  useSubmit,\r\n  useSuccess,\r\n  useResetState\r\n} from '../utils';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  getUsers,\r\n  resetUserState,\r\n  getUserDetailRequest,\r\n  updateUserRequest,\r\n  deleteUserRequest,\r\n} from '../../redux/user/action';\r\n\r\nconst getSelector = key => state => state.user[key];\r\n\r\nconst loadingSelector = getSelector('isLoading');\r\nconst listSelector = getSelector('list');\r\nconst paramsSelector = getSelector('listParams');\r\nconst getListFailedSelector = getSelector('getListFailed');\r\n\r\nconst itemSelector = getSelector('item');\r\nconst getItemFailedSelector = getSelector('getItemFailed');\r\n\r\nconst updateSuccessSelector = getSelector('updateSuccess');\r\nconst updateFailedSelector = getSelector('updateFailed');\r\n\r\nconst deleteSuccessSelector = getSelector('deleteSuccess');\r\nconst deleteFailedSelector = getSelector('deleteFailed');\r\n\r\nexport const useUsersQueryParams = () => {\r\n  const query = useQueryParams();\r\n  const page = query.get('page') || 1;\r\n  const per_page = query.get('per_page') || 10;\r\n  const keyword = query.get('keyword');\r\n\r\n  return useMemo(() => {\r\n    return {\r\n      page,\r\n      per_page,\r\n      order_by_created_at: 'desc',\r\n      keyword: keyword || undefined\r\n    };\r\n    //eslint-disable-next-line\r\n  }, [page, per_page, keyword]);\r\n};\r\n\r\nexport const useUsers = query => {\r\n  return useFetchByParam({\r\n    action: getUsers,\r\n    loadingSelector,\r\n    dataSelector: listSelector,\r\n    failedSelector: getListFailedSelector,\r\n    param: query\r\n  });\r\n};\r\n\r\nexport const useUsersResParams = () => {\r\n  return useSelector(paramsSelector)\r\n};\r\n\r\nexport const useInitUser = (user) => {\r\n\r\n  return useMemo(() => {\r\n    return {\r\n      id: user?.id || null,\r\n      name: user?.name || '',\r\n      email: user?.email || '',\r\n      password: '',\r\n      role_id: user?.roles.map(e => ('' + e.id)) || null,\r\n    }\r\n  }, [user])\r\n}\r\n\r\nexport const useUpdateUser = () => {\r\n  const navigate = useNavigate();\r\n  const [isLoading, handleSubmit] = useSubmit({\r\n    loadingSelector,\r\n    action: updateUserRequest\r\n  });\r\n\r\n  const successCallback = () => navigate(\"/user\");\r\n\r\n  useSuccess(updateSuccessSelector, 'Update user success', successCallback);\r\n  useFailed(updateFailedSelector, 'Update user Failed');\r\n\r\n  return [isLoading, handleSubmit];\r\n}\r\n\r\nexport const useResetUser = () => {\r\n  useResetState(resetUserState);\r\n};\r\n\r\nexport const useUserDetail = (param) => {\r\n  return useFetchByParam({\r\n    action: getUserDetailRequest,\r\n    loadingSelector,\r\n    dataSelector: itemSelector,\r\n    failedSelector: getItemFailedSelector,\r\n    param\r\n  });\r\n};\r\n\r\nexport const useDeleteUser = (params) => {\r\n  const dispatch = useDispatch();\r\n  const [isLoading, handleSubmit] = useSubmit({\r\n    loadingSelector,\r\n    action: deleteUserRequest\r\n  });\r\n\r\n  const successCallback = () => {dispatch(getUsers(params))}\r\n\r\n  useSuccess(deleteSuccessSelector, 'Delete User success', successCallback);\r\n  useFailed(deleteFailedSelector, 'Delete User Failed');\r\n\r\n  return [isLoading, handleSubmit];\r\n}\r\n","import {\n  GET_ROLES_REQUEST,\n} from '../../constants/actionTypes';\n\nexport const getRoles = query => ({\n  type: GET_ROLES_REQUEST,\n  payload: query\n});\n","import {\r\n  useFetch,\r\n} from '../utils';\r\nimport {\r\n  getRoles,\r\n} from '../../redux/role/action';\r\n\r\nconst getSelector = key => state => state.role[key];\r\n\r\nconst loadingSelector = getSelector('isLoading');\r\nconst listSelector = getSelector('list');\r\nconst getListFailedSelector = getSelector('getListFailed');\r\n\r\nexport const useRoles = query => {\r\n  return useFetch({\r\n    action: getRoles,\r\n    loadingSelector,\r\n    dataSelector: listSelector,\r\n    failedSelector: getListFailedSelector,\r\n    param: query\r\n  });\r\n};\r\n","import * as yup from \"yup\";\r\n\r\nconst schema = yup.object().shape({\r\n  name: yup.string()\r\n    .required(\"The username field is required\")\r\n    .max(255, 'The username may not be greater than 255 characters.'),\r\n  role_id: yup.array()\r\n    .min(1, \"The roles field is required\"),\r\n});\r\n\r\nexport default schema\r\n","import { useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nimport {\r\n  useInitUser,\r\n  useResetUser,\r\n  useUpdateUser,\r\n} from 'hooks/user';\r\nimport { useRoles } from 'hooks/role';\r\n\r\nimport Input from 'components/Form/Input';\r\nimport Submit from 'components/Form/Submit';\r\nimport ErrorMEssage from 'components/Form/ErrorMEssage';\r\n\r\nimport UserFormValidation from './UserFormValidation';\r\n\r\nfunction UserForm({user}) {\r\n  const defaultValues = useInitUser(user)\r\n  useResetUser()\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setError,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm({\r\n    defaultValues: defaultValues,\r\n    resolver: yupResolver(UserFormValidation)\r\n  });\r\n\r\n  const [roles] = useRoles()\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      reset(defaultValues)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [user])\r\n\r\n  const [loadingUpdate, onUpdate] = useUpdateUser({setError});\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onUpdate)}>\r\n      <div className=\"row mb-3\">\r\n        <div className=\"col-sm-4\">\r\n          Email\r\n        </div>\r\n        <div className=\"col-sm-8\">\r\n          <Input\r\n            disabled\r\n            {...register('email')}\r\n            placeholder=\"email\"\r\n            errors={errors}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"row mb-3\">\r\n        <div className=\"col-sm-4\">\r\n          Username <span className=\"text-danger\">*</span>\r\n        </div>\r\n        <div className=\"col-sm-8\">\r\n          <Input\r\n            {...register('name')}\r\n            placeholder=\"name\"\r\n            errors={errors}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"row mb-3\">\r\n        <div className=\"col-sm-4\">\r\n          Password\r\n        </div>\r\n        <div className=\"col-sm-8\">\r\n          <Input\r\n            type=\"password\"\r\n            {...register('password')}\r\n            placeholder=\"password\"\r\n            errors={errors}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"row mb-3\">\r\n        <div className=\"col-sm-4\">\r\n          Roles <span className=\"text-danger\">*</span>\r\n        </div>\r\n        <div className=\"col-sm-8\">\r\n          {roles.map((role, index) => (\r\n            <div key={index}>\r\n              <div className=\"form-check form-check-inline\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"checkbox\"\r\n                  id={`role-${role.id}`}\r\n                  value={role.id}\r\n                  {...register('role_id')}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor={`role-${role.id}`}>\r\n                  {role.display_name}\r\n                </label>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <ErrorMEssage error={errors?.role_id} />\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div className=\"row\">\r\n        <div className=\"col text-end\">\r\n          <Submit\r\n            loading={loadingUpdate}\r\n            className=\"btn btn-primary text-white\"\r\n            label={user ? \"Update\" : \"Create\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default UserForm;\r\n\r\nUserForm.defaultProps = {}\r\n\r\nUserForm.propTypes = {\r\n  user: PropTypes.object,\r\n}\r\n","import { Fragment } from 'react';\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { useUserDetail } from 'hooks/user';\r\n\r\nimport UserForm from './UserForm'\r\nimport Breadcrumb from \"components/Breadcrumb\"\r\nimport LoadingScreen from \"components/LoadingScreen\"\r\n\r\nconst breadcrumbCreate = [\r\n  {name: '', url: '/', icon: 'mdi mdi-home-outline fs-4'},\r\n  {name: 'User', url: '/user', icon: null},\r\n  {name: 'Create', url: null, icon: null},\r\n]\r\n\r\nconst breadcrumbEdit = [\r\n  {name: '', url: '/', icon: 'mdi mdi-home-outline fs-4'},\r\n  {name: 'User', url: '/user', icon: null},\r\n  {name: 'Edit', url: null, icon: null},\r\n]\r\n\r\nfunction UserFormPage() {\r\n  const params = useParams()\r\n  const [user, isLoading] = useUserDetail(params.id ? params : null);\r\n\r\n  if (isLoading) {\r\n    return <LoadingScreen />\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb\r\n        breadcrumb={params.id ? breadcrumbEdit : breadcrumbCreate}\r\n        title={params.id ? \"User Edit\" : \"User Create\"}\r\n      />\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">\r\n                  {params.id ? \"User Edit\" : \"Create new user\"}\r\n                </h4>\r\n                <hr />\r\n                <UserForm user={user} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default UserFormPage;\r\n"],"names":["Breadcrumb","breadcrumb","title","showButton","buttonAction","buttonText","className","map","b","key","Fragment","url","to","icon","name","defaultProps","error","message","Input","forwardRef","ref","type","onChange","placeholder","errors","disabled","id","propTypes","PropTypes","displayName","Submit","label","loading","role","getUsers","query","GET_USERS_REQUEST","payload","resetUserState","RESET_USER","getUserDetailRequest","param","GET_USER_DETAIL_REQUEST","updateUserRequest","UPDATE_USER_REQUEST","deleteUserRequest","DELETE_USER_REQUEST","getSelector","state","user","loadingSelector","listSelector","paramsSelector","getListFailedSelector","itemSelector","getItemFailedSelector","updateSuccessSelector","updateFailedSelector","deleteSuccessSelector","deleteFailedSelector","useUsersQueryParams","useQueryParams","page","get","per_page","keyword","useMemo","order_by_created_at","undefined","useUsers","useFetchByParam","action","dataSelector","failedSelector","useUsersResParams","useSelector","useInitUser","email","password","role_id","roles","e","useUpdateUser","navigate","useNavigate","useSubmit","isLoading","handleSubmit","useSuccess","useFailed","useResetUser","useResetState","useUserDetail","useDeleteUser","params","dispatch","useDispatch","getRoles","GET_ROLES_REQUEST","yup","shape","required","max","min","UserForm","defaultValues","useForm","resolver","yupResolver","UserFormValidation","register","setError","formState","reset","useFetch","useEffect","loadingUpdate","onUpdate","onSubmit","index","value","htmlFor","display_name","ErrorMEssage","breadcrumbCreate","breadcrumbEdit","useParams","LoadingScreen"],"sourceRoot":""}