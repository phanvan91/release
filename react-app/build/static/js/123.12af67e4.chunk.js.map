{"version":3,"file":"static/js/123.12af67e4.chunk.js","mappings":"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","sources":["components/Breadcrumb/Breadcrumb.js","components/Modal/DeleteModal.js","components/Form/ButtonDelete.js","components/Pagination/Pagination.js","redux/user/action.js","hooks/user/index.js","pages/User/index.js"],"sourcesContent":["import { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nconst Breadcrumb = ({\n  breadcrumb,\n  title,\n  showButton,\n  buttonAction,\n  buttonText,\n}) => (\n  <div className=\"page-breadcrumb\">\n    <div className=\"row align-items-center\">\n      <div className=\"col-6\">\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb mb-0 d-flex align-items-center\">\n            {breadcrumb.map((b, key) => (\n              <Fragment key={key}>\n                {b.url && (\n                  <li className=\"breadcrumb-item\">\n                    <Link to={b.url} className=\"link\">\n                      {b.icon && <i className={b.icon}></i>}\n                      {b.icon && ' '}\n                      {b.name}\n                    </Link>\n                  </li>\n                )}\n                {!b.url && <li className=\"breadcrumb-item active\">{b.name}</li>}\n              </Fragment>\n            ))}\n          </ol>\n        </nav>\n        {title ? <h1 className=\"mb-0 fw-bold\">{title}</h1> : null}\n      </div>\n      <div className=\"col-6\">\n        {showButton ? (\n          <div className=\"text-end upgrade-btn\">\n            <Link to={buttonAction} className=\"btn btn-primary text-white\">\n              {buttonText}\n            </Link>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  </div>\n)\n\nexport default Breadcrumb\n\nBreadcrumb.defaultProps = {\n  breadcrumb: [],\n  title: '',\n  showButton: false,\n}\n\nBreadcrumb.propTypes = {\n  title: PropTypes.string,\n  breadcrumb: PropTypes.array,\n  className: PropTypes.string,\n  showButton: PropTypes.bool,\n  buttonAction: PropTypes.func,\n  buttonText: PropTypes.string,\n}\n","import { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport PropTypes from 'prop-types'\n\nfunction DeleteModal ({isModalOpen, toggleModal, onDelete}) {\n  return (\n    <div>\n      <Modal isOpen={isModalOpen} toggle={toggleModal}>\n        <ModalHeader></ModalHeader>\n        <ModalBody className=\"text-center\">\n          <h3>Are you sure?</h3>\n          <p>You won&#39;t be able to revert this!</p>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"danger text-white\" onClick={onDelete}>Delete</Button>{' '}\n          <Button color=\"secondary\" onClick={toggleModal}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  )\n}\n\nexport default DeleteModal\n\nDeleteModal.defaultProps = {\n  isModalOpen: false,\n  toggleModal: () => {},\n  onDelete: () => {}\n}\n\nDeleteModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  toggleModal: PropTypes.func,\n  onDelete: PropTypes.func,\n}\n","import { useReducer } from 'react';\nimport PropTypes from 'prop-types'\nimport DeleteModal from \"components/Modal/DeleteModal\"\n\nconst Button = ({onDelete, className}) => {\n  const [isModalOpen, toggleModal] = useReducer(p => !p, false);\n  return (\n    <>\n      <button\n        type=\"button\"\n        className={\"btn btn-sm btn-danger text-white\" + (className ? (' ' + className) : ' mx-2')}\n        onClick={toggleModal}\n      >\n        Delete\n      </button>\n      <DeleteModal\n        isModalOpen={isModalOpen}\n        toggleModal={toggleModal}\n        onDelete={() => {onDelete(); toggleModal()}}\n      />\n    </>\n  );\n}\n\nexport default Button\n\nButton.defaultProps = {\n  onDelete: () => {}\n}\n\nButton.propTypes = {\n  onDelete: PropTypes.func,\n  className: PropTypes.string,\n}\n","import { useState, useEffect } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst LEFT_PAGE = \"LEFT\";\r\nconst LEFT_PAGE_DISABLE = \"LEFT_DISABLE\";\r\nconst RIGHT_PAGE = \"RIGHT\";\r\nconst RIGHT_PAGE_DISABLE = \"RIGHT_DISABLE\";\r\n\r\nconst FIRST_PAGE = \"FIRST\";\r\nconst FIRST_PAGE_DISABLE = \"FIRST_DISABLE\";\r\nconst LAST_PAGE = \"LAST\";\r\nconst LAST_PAGE_DISABLE = \"LAST_DISABLE\";\r\n\r\nconst range = (from, to, step = 1) => {\r\n  let i = from;\r\n  const range = [];\r\n\r\n  while (i <= to) {\r\n    range.push(i);\r\n    i += step;\r\n  }\r\n\r\n  return range;\r\n};\r\n\r\nconst Pagination = props => {\r\n  const {\r\n    totalRecords,\r\n    pageLimit,\r\n    pageNeighbours,\r\n    onPageChanged,\r\n    currentPage,\r\n    className\r\n  } = props;\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  useEffect(() => {\r\n    setTotalPages(Math.ceil(totalRecords / pageLimit));\r\n    // eslint-disable-next-line\r\n  }, [currentPage, totalRecords]);\r\n\r\n  const fetchPageNumbers = () => {\r\n    const totalNumbers = pageNeighbours //  * 2 + 3;\r\n    // const totalBlocks = totalNumbers + 2;\r\n\r\n    // if (totalPages > totalBlocks) {\r\n    const startPage = Math.max(1, currentPage - pageNeighbours);\r\n    const endPage = Math.min(totalPages, currentPage + pageNeighbours);\r\n\r\n    let pages = range(startPage, endPage);\r\n\r\n    const hasLeftSpill = startPage > 2;\r\n    const hasRightSpill = totalPages - endPage > 1;\r\n    const spillOffset = totalNumbers - (pages.length + 1);\r\n\r\n    const btnLeft = currentPage > 1 ? LEFT_PAGE : LEFT_PAGE_DISABLE\r\n    const btnRight = currentPage < totalPages ? RIGHT_PAGE : RIGHT_PAGE_DISABLE\r\n\r\n    const btnFirst = currentPage > 1 ? FIRST_PAGE : FIRST_PAGE_DISABLE\r\n    const btnLast = currentPage < totalPages ? LAST_PAGE : LAST_PAGE_DISABLE\r\n\r\n    switch (true) {\r\n      // handle: (1) < {5 6} [7] {8 9} (10)\r\n      case hasLeftSpill && !hasRightSpill: {\r\n        const extraPages = range(startPage - spillOffset, startPage - 1);\r\n        pages = [btnFirst, btnLeft, ...extraPages, ...pages, btnRight, btnLast];\r\n        break;\r\n      }\r\n      // handle: (1) < {4 5} [6] {7 8} > (10)\r\n      case hasLeftSpill && hasRightSpill:\r\n      default: {\r\n        pages = [btnFirst, btnLeft, ...pages, btnRight, btnLast];\r\n        break;\r\n      }\r\n    }\r\n    return [...pages];\r\n    // }\r\n    // return [FIRST_PAGE_DISABLE, LEFT_PAGE_DISABLE, ...(range(1, totalPages)), RIGHT_PAGE_DISABLE, LAST_PAGE_DISABLE];\r\n  };\r\n\r\n  const clickPageChanged = (e, page) => {\r\n    e.preventDefault()\r\n    if (page < 1 || page > totalPages || page === currentPage) {\r\n      return\r\n    }\r\n    onPageChanged(page)\r\n  }\r\n\r\n  const pages = fetchPageNumbers() || [];\r\n\r\n  return (\r\n    <ul className={`pagination pagination-style-one justify-content-center ${className || 'pt-50'}`}>\r\n      {pages.map((page, index) => {\r\n        if (page === LEFT_PAGE || page === LEFT_PAGE_DISABLE)\r\n          return (\r\n            <li key={index} className={`page-item page-arrow${page === LEFT_PAGE_DISABLE ? ' disabled' : ''}`}>\r\n              <a\r\n                href=\"#\"\r\n                className=\"page-link\"\r\n                aria-label=\"Previous\"\r\n                onClick={e => clickPageChanged(e, currentPage - 1)}\r\n              >\r\n                prev\r\n                {/*<i className=\"m-r-10 mdi mdi-chevron-left\"></i>*/}\r\n                {/*<span aria-hidden=\"true\">&laquo;</span>*/}\r\n                {/*<span className=\"sr-only\">Previous</span>*/}\r\n              </a>\r\n            </li>\r\n          );\r\n\r\n        if (page === RIGHT_PAGE || page === RIGHT_PAGE_DISABLE)\r\n          return (\r\n            <li key={index} className={`page-item page-arrow${page === RIGHT_PAGE_DISABLE ? ' disabled' : ''}`}>\r\n              <a\r\n                href=\"#\"\r\n                className=\"page-link\"\r\n                aria-label=\"Next\"\r\n                onClick={e => clickPageChanged(e, currentPage + 1)}\r\n              >\r\n                next\r\n                {/*<i className=\"m-r-10 mdi mdi-chevron-right\"></i>*/}\r\n                {/*<span aria-hidden=\"true\">&raquo;</span>*/}\r\n                {/*<span className=\"sr-only\">Next</span>*/}\r\n              </a>\r\n            </li>\r\n          );\r\n        if (page === FIRST_PAGE || page === FIRST_PAGE_DISABLE)\r\n          return (\r\n            <li key={index} className={`page-item page-arrow${page === FIRST_PAGE_DISABLE ? ' disabled' : ''}`}>\r\n              <a\r\n                href=\"#\"\r\n                className=\"page-link\"\r\n                aria-label=\"Previous\"\r\n                onClick={e => clickPageChanged(e, 1)}\r\n              >\r\n                first\r\n                {/*<i className=\"m-r-10 mdi mdi-chevron-left\"></i>*/}\r\n                {/*<span aria-hidden=\"true\">&laquo;</span>*/}\r\n                {/*<span className=\"sr-only\">Previous</span>*/}\r\n              </a>\r\n            </li>\r\n          );\r\n\r\n        if (page === LAST_PAGE || page === LAST_PAGE_DISABLE)\r\n          return (\r\n            <li key={index} className={`page-item page-arrow${page === LAST_PAGE_DISABLE ? ' disabled' : ''}`}>\r\n              <a\r\n                href=\"#\"\r\n                className=\"page-link\"\r\n                aria-label=\"Next\"\r\n                onClick={e => clickPageChanged(e, totalPages)}\r\n              >\r\n                last\r\n                {/*<i className=\"m-r-10 mdi mdi-chevron-right\"></i>*/}\r\n                {/*<span aria-hidden=\"true\">&raquo;</span>*/}\r\n                {/*<span className=\"sr-only\">Next</span>*/}\r\n              </a>\r\n            </li>\r\n          );\r\n\r\n        return (\r\n          <li\r\n            key={index}\r\n            className={`page-item page-arrow${\r\n              currentPage === page ? \" active\" : \"\"\r\n            }`}\r\n          >\r\n            <a\r\n              href=\"#\"\r\n              className=\"page-link\"\r\n              onClick={e => clickPageChanged(e, page)}\r\n            >\r\n              {page}\r\n            </a>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n\r\nPagination.defaultProps = {\r\n  totalRecords: 0,\r\n  pageLimit: 0,\r\n  pageNeighbours: 0,\r\n  onPageChanged: () => {},\r\n  currentPage:0,\r\n}\r\n\r\nPagination.propTypes = {\r\n  totalRecords: PropTypes.number,\r\n  pageLimit: PropTypes.number,\r\n  pageNeighbours: PropTypes.number,\r\n  onPageChanged: PropTypes.func,\r\n  currentPage: PropTypes.number,\r\n  className: PropTypes.string\r\n}\r\n","import {\n  GET_USERS_REQUEST,\n  RESET_USER,\n  GET_USER_DETAIL_REQUEST,\n  UPDATE_USER_REQUEST,\n  DELETE_USER_REQUEST,\n} from '../../constants/actionTypes';\n\nexport const getUsers = query => ({\n  type: GET_USERS_REQUEST,\n  payload: query\n});\n\nexport const resetUserState = () => ({\n  type: RESET_USER,\n});\n\nexport const getUserDetailRequest = (param) => ({\n  type: GET_USER_DETAIL_REQUEST,\n  payload: param\n});\n\nexport const updateUserRequest = (param) => ({\n  type: UPDATE_USER_REQUEST,\n  payload: param\n});\n\nexport const deleteUserRequest = (param) => ({\n  type: DELETE_USER_REQUEST,\n  payload: param\n});\n","import { useMemo } from 'react';\r\nimport {\r\n  useFailed,\r\n  useFetchByParam,\r\n  useQueryParams,\r\n  useSubmit,\r\n  useSuccess,\r\n  useResetState\r\n} from '../utils';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  getUsers,\r\n  resetUserState,\r\n  getUserDetailRequest,\r\n  updateUserRequest,\r\n  deleteUserRequest,\r\n} from '../../redux/user/action';\r\n\r\nconst getSelector = key => state => state.user[key];\r\n\r\nconst loadingSelector = getSelector('isLoading');\r\nconst listSelector = getSelector('list');\r\nconst paramsSelector = getSelector('listParams');\r\nconst getListFailedSelector = getSelector('getListFailed');\r\n\r\nconst itemSelector = getSelector('item');\r\nconst getItemFailedSelector = getSelector('getItemFailed');\r\n\r\nconst updateSuccessSelector = getSelector('updateSuccess');\r\nconst updateFailedSelector = getSelector('updateFailed');\r\n\r\nconst deleteSuccessSelector = getSelector('deleteSuccess');\r\nconst deleteFailedSelector = getSelector('deleteFailed');\r\n\r\nexport const useUsersQueryParams = () => {\r\n  const query = useQueryParams();\r\n  const page = query.get('page') || 1;\r\n  const per_page = query.get('per_page') || 10;\r\n  const keyword = query.get('keyword');\r\n\r\n  return useMemo(() => {\r\n    return {\r\n      page,\r\n      per_page,\r\n      order_by_created_at: 'desc',\r\n      keyword: keyword || undefined\r\n    };\r\n    //eslint-disable-next-line\r\n  }, [page, per_page, keyword]);\r\n};\r\n\r\nexport const useUsers = query => {\r\n  return useFetchByParam({\r\n    action: getUsers,\r\n    loadingSelector,\r\n    dataSelector: listSelector,\r\n    failedSelector: getListFailedSelector,\r\n    param: query\r\n  });\r\n};\r\n\r\nexport const useUsersResParams = () => {\r\n  return useSelector(paramsSelector)\r\n};\r\n\r\nexport const useInitUser = (user) => {\r\n\r\n  return useMemo(() => {\r\n    return {\r\n      id: user?.id || null,\r\n      name: user?.name || '',\r\n      email: user?.email || '',\r\n      password: '',\r\n      role_id: user?.roles.map(e => ('' + e.id)) || null,\r\n    }\r\n  }, [user])\r\n}\r\n\r\nexport const useUpdateUser = () => {\r\n  const navigate = useNavigate();\r\n  const [isLoading, handleSubmit] = useSubmit({\r\n    loadingSelector,\r\n    action: updateUserRequest\r\n  });\r\n\r\n  const successCallback = () => navigate(\"/user\");\r\n\r\n  useSuccess(updateSuccessSelector, 'Update user success', successCallback);\r\n  useFailed(updateFailedSelector, 'Update user Failed');\r\n\r\n  return [isLoading, handleSubmit];\r\n}\r\n\r\nexport const useResetUser = () => {\r\n  useResetState(resetUserState);\r\n};\r\n\r\nexport const useUserDetail = (param) => {\r\n  return useFetchByParam({\r\n    action: getUserDetailRequest,\r\n    loadingSelector,\r\n    dataSelector: itemSelector,\r\n    failedSelector: getItemFailedSelector,\r\n    param\r\n  });\r\n};\r\n\r\nexport const useDeleteUser = (params) => {\r\n  const dispatch = useDispatch();\r\n  const [isLoading, handleSubmit] = useSubmit({\r\n    loadingSelector,\r\n    action: deleteUserRequest\r\n  });\r\n\r\n  const successCallback = () => {dispatch(getUsers(params))}\r\n\r\n  useSuccess(deleteSuccessSelector, 'Delete User success', successCallback);\r\n  useFailed(deleteFailedSelector, 'Delete User Failed');\r\n\r\n  return [isLoading, handleSubmit];\r\n}\r\n","import { Fragment } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport queryString from 'query-string'\r\n\r\nimport { useUsersQueryParams, useUsers, useUsersResParams, useDeleteUser } from 'hooks/user';\r\n\r\nimport Breadcrumb from \"components/Breadcrumb\"\r\nimport Pagination from \"components/Pagination\"\r\nimport ButtonDelete from \"components/Form/ButtonDelete\"\r\n\r\nconst breadcrumb = [\r\n  {name: '', url: '/', icon: 'mdi mdi-home-outline fs-4'},\r\n  {name: 'User List', url: null, icon: null},\r\n]\r\n\r\nconst roleColor = {\r\n  \"user\": 'info',\r\n  \"admin\": 'success',\r\n}\r\n\r\nfunction Product() {\r\n  const navigate = useNavigate();\r\n\r\n  const searchQuery = useUsersQueryParams();\r\n  const [users] = useUsers(searchQuery);\r\n  const resParams = useUsersResParams();\r\n  const [, handleDelete] = useDeleteUser(searchQuery);\r\n\r\n  const changeParams = (type, value) => {\r\n    const params = {...searchQuery}\r\n    params[type] = value\r\n    if (type !== 'page') {\r\n      params.page = 1\r\n    }\r\n    navigate(\r\n      {\r\n        pathname: '/user',\r\n        search: `?${queryString.stringify(params)}`,\r\n      },\r\n      { replace: true }\r\n    )\r\n  }\r\n\r\n  const onPageChanged = (page) => {\r\n    changeParams('page', page)\r\n  }\r\n\r\n  const deleteUser = (user) => {\r\n    handleDelete({id: user.id})\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb\r\n        breadcrumb={breadcrumb}\r\n        title=\"User List\"\r\n        showButton\r\n        buttonText={'Create user'}\r\n        buttonAction={\"/user/create\"}\r\n      />\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card main-body-table\">\r\n              <div className=\"card-body\">\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table mb-0 table-hover align-middle text-nowrap\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"border-top-0\">ID</th>\r\n                        <th className=\"border-top-0\">Name</th>\r\n                        <th className=\"border-top-0\">Email</th>\r\n                        <th className=\"border-top-0\">Roles</th>\r\n                        <th className=\"border-top-0\"></th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {users.map((user) => (\r\n                        <tr key={user.id}>\r\n                          <td>{user.id}</td>\r\n                          <td>{user.name}</td>\r\n                          <td>{user.email}</td>\r\n                          <td>\r\n                            {(user.roles || []).map(e => (\r\n                              <span\r\n                                className={`mx-1 badge bg-${roleColor[e.role_name]}`}\r\n                                key={`role${user.id}-${e.id}`}\r\n                              >\r\n                                {e.display_name}\r\n                              </span>\r\n                            ))}\r\n                          </td>\r\n                          <td className=\"text-end\">\r\n                            {/*{!hasRole(user, 'admin') ? (*/}\r\n                            <Link\r\n                              className=\"btn btn-sm btn-primary text-white\"\r\n                              to={`/user/${user.id}/edit`}\r\n                            >\r\n                              Edit\r\n                            </Link>\r\n                            <ButtonDelete onDelete={() => deleteUser(user)} />\r\n                            {/*) : null}*/}\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <nav className=\"pagination-content\">\r\n                  {resParams.total ? <Pagination\r\n                    totalRecords={+resParams.total}\r\n                    pageLimit={+resParams.per_page}\r\n                    pageNeighbours={2}\r\n                    currentPage={+resParams.current_page}\r\n                    onPageChanged={onPageChanged}\r\n                    className=\"pt-0\"\r\n                  /> : null}\r\n                </nav>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n"],"names":["Breadcrumb","breadcrumb","title","showButton","buttonAction","buttonText","className","map","b","key","Fragment","url","to","icon","name","defaultProps","DeleteModal","isModalOpen","toggleModal","onDelete","isOpen","toggle","color","onClick","Button","useReducer","p","type","LEFT_PAGE","LEFT_PAGE_DISABLE","RIGHT_PAGE","RIGHT_PAGE_DISABLE","FIRST_PAGE","FIRST_PAGE_DISABLE","LAST_PAGE","LAST_PAGE_DISABLE","range","from","step","i","push","Pagination","props","totalRecords","pageLimit","pageNeighbours","onPageChanged","currentPage","useState","totalPages","setTotalPages","useEffect","Math","ceil","clickPageChanged","e","page","preventDefault","pages","totalNumbers","startPage","max","endPage","min","hasLeftSpill","hasRightSpill","spillOffset","length","btnLeft","btnRight","btnFirst","btnLast","extraPages","fetchPageNumbers","index","href","getUsers","query","GET_USERS_REQUEST","payload","resetUserState","RESET_USER","getUserDetailRequest","param","GET_USER_DETAIL_REQUEST","updateUserRequest","UPDATE_USER_REQUEST","deleteUserRequest","DELETE_USER_REQUEST","getSelector","state","user","loadingSelector","listSelector","paramsSelector","getListFailedSelector","itemSelector","getItemFailedSelector","updateSuccessSelector","updateFailedSelector","deleteSuccessSelector","deleteFailedSelector","useUsersQueryParams","useQueryParams","get","per_page","keyword","useMemo","order_by_created_at","undefined","useUsers","useFetchByParam","action","dataSelector","failedSelector","useUsersResParams","useSelector","useInitUser","id","email","password","role_id","roles","useUpdateUser","navigate","useNavigate","useSubmit","isLoading","handleSubmit","useSuccess","useFailed","useResetUser","useResetState","useUserDetail","useDeleteUser","params","dispatch","useDispatch","roleColor","searchQuery","users","resParams","handleDelete","role_name","display_name","deleteUser","total","current_page","value","pathname","search","queryString","replace","changeParams"],"sourceRoot":""}