{"version":3,"file":"static/js/624.f0da9b87.chunk.js","mappings":"qLAGA,SAASA,EAAT,GAA6D,IAAtCC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,SAC/C,OACE,0BACE,UAAC,KAAD,CAAOC,OAAQH,EAAaI,OAAQH,EAApC,WACE,SAAC,KAAD,KACA,UAAC,KAAD,CAAWI,UAAU,cAArB,WACE,2CACA,iEAEF,UAAC,KAAD,YACE,SAAC,KAAD,CAAQC,MAAM,oBAAoBC,QAASL,EAA3C,oBAAqE,KACrE,SAAC,KAAD,CAAQI,MAAM,YAAYC,QAASN,EAAnC,2BAKT,CAED,QAEAF,EAAYS,aAAe,CACzBR,aAAa,EACbC,YAAa,WAAQ,EACrBC,SAAU,WAAQ,GCtBpB,IAAMO,EAAS,SAAC,GAA2B,IAA1BP,EAAyB,EAAzBA,SAAUG,EAAe,EAAfA,UACzB,GAAmCK,EAAAA,EAAAA,aAAW,SAAAC,GAAC,OAAKA,CAAL,IAAQ,GAAvD,eAAOX,EAAP,KAAoBC,EAApB,KACA,OACE,iCACE,mBACEW,KAAK,SACLP,UAAW,oCAAsCA,EAAa,IAAMA,EAAa,SACjFE,QAASN,EAHX,qBAOA,SAAC,EAAD,CACED,YAAaA,EACbC,YAAaA,EACbC,SAAU,WAAOA,IAAYD,GAAc,MAIlD,EAED,IAEAQ,EAAOD,aAAe,CACpBN,SAAU,WAAQ,E,iGCxBdW,EAAY,OACZC,EAAoB,eACpBC,EAAa,QACbC,EAAqB,gBAErBC,EAAa,QACbC,EAAqB,gBACrBC,EAAY,OACZC,EAAoB,eAEpBC,EAAQ,SAACC,EAAMC,GAInB,IAJqC,IAAdC,EAAa,uDAAN,EAC1BC,EAAIH,EACFD,EAAQ,GAEPI,GAAKF,GACVF,EAAMK,KAAKD,GACXA,GAAKD,EAGP,OAAOH,CACR,EAEKM,EAAa,SAAAC,GACjB,IACEC,EAMED,EANFC,aACAC,EAKEF,EALFE,UACAC,EAIEH,EAJFG,eACAC,EAGEJ,EAHFI,cACAC,EAEEL,EAFFK,YACA5B,EACEuB,EADFvB,UAEF,GAAoC6B,EAAAA,EAAAA,UAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,MACAC,EAAAA,EAAAA,YAAU,WACRD,EAAcE,KAAKC,KAAKV,EAAeC,GAExC,GAAE,CAACG,EAAaJ,IAEjB,IAuCMW,EAAmB,SAACC,EAAGC,GAC3BD,EAAEE,iBACED,EAAO,GAAKA,EAAOP,GAAcO,IAAST,GAG9CD,EAAcU,EACf,EAEKE,EA/CmB,WACvB,IAAMC,EAAed,EAIfe,EAAYR,KAAKS,IAAI,EAAGd,EAAcF,GACtCiB,EAAUV,KAAKW,IAAId,EAAYF,EAAcF,GAE/Ca,EAAQvB,EAAMyB,EAAWE,GAEvBE,EAAeJ,EAAY,EAC3BK,EAAgBhB,EAAaa,EAAU,EACvCI,EAAcP,GAAgBD,EAAMS,OAAS,GAE7CC,EAAUrB,EAAc,EAAIpB,EAAYC,EACxCyC,EAAWtB,EAAcE,EAAapB,EAAaC,EAEnDwC,EAAWvB,EAAc,EAAIhB,EAAaC,EAC1CuC,EAAUxB,EAAcE,EAAahB,EAAYC,EAEvD,IAAQ,KAED8B,IAAiBC,GAAtB,CACE,IAAMO,EAAarC,EAAMyB,EAAYM,EAAaN,EAAY,GAC9DF,EAAK,CAAIY,EAAUF,GAAd,eAA0BI,IAA1B,OAAyCd,GAAzC,CAAgDW,EAAUE,GAEhE,MAICb,EAAK,CAAIY,EAAUF,GAAd,eAA0BV,GAA1B,CAAiCW,EAAUE,IAIpD,OAAO,OAAIb,EAGZ,CAUae,IAAsB,GAEpC,OACE,eAAItD,UAAS,iEAA4DA,GAAa,SAAtF,SACGuC,EAAMgB,KAAI,SAAClB,EAAMmB,GAChB,OAAInB,IAAS7B,GAAa6B,IAAS5B,GAE/B,eAAgBT,UAAS,8BAAyBqC,IAAS5B,EAAoB,YAAc,IAA7F,UACE,cACEgD,KAAK,IACLzD,UAAU,YACV,aAAW,WACXE,QAAS,SAAAkC,GAAC,OAAID,EAAiBC,EAAGR,EAAc,EAAtC,EAJZ,mBADO4B,GAeTnB,IAAS3B,GAAc2B,IAAS1B,GAEhC,eAAgBX,UAAS,8BAAyBqC,IAAS1B,EAAqB,YAAc,IAA9F,UACE,cACE8C,KAAK,IACLzD,UAAU,YACV,aAAW,OACXE,QAAS,SAAAkC,GAAC,OAAID,EAAiBC,EAAGR,EAAc,EAAtC,EAJZ,mBADO4B,GAcTnB,IAASzB,GAAcyB,IAASxB,GAEhC,eAAgBb,UAAS,8BAAyBqC,IAASxB,EAAqB,YAAc,IAA9F,UACE,cACE4C,KAAK,IACLzD,UAAU,YACV,aAAW,WACXE,QAAS,SAAAkC,GAAC,OAAID,EAAiBC,EAAG,EAAxB,EAJZ,oBADOoB,GAeTnB,IAASvB,GAAauB,IAAStB,GAE/B,eAAgBf,UAAS,8BAAyBqC,IAAStB,EAAoB,YAAc,IAA7F,UACE,cACE0C,KAAK,IACLzD,UAAU,YACV,aAAW,OACXE,QAAS,SAAAkC,GAAC,OAAID,EAAiBC,EAAGN,EAAxB,EAJZ,mBADO0B,IAgBX,eAEExD,UAAS,8BACP4B,IAAgBS,EAAO,UAAY,IAHvC,UAME,cACEoB,KAAK,IACLzD,UAAU,YACVE,QAAS,SAAAkC,GAAC,OAAID,EAAiBC,EAAGC,EAAxB,EAHZ,SAKGA,KAVEmB,EAcV,KAGN,EAED,IAEAlC,EAAWnB,aAAe,CACxBqB,aAAc,EACdC,UAAW,EACXC,eAAgB,EAChBC,cAAe,WAAQ,EACvBC,YAAY,E,gUClLD8B,EAAkB,SAAAC,GAAK,MAAK,CACvCpD,KAAMqD,EAAAA,GACNC,QAASF,EAFyB,EAKvBG,EAA2B,SAAAC,GAAK,MAAK,CAChDxD,KAAMyD,EAAAA,GACNH,QAASE,EAFkC,EAKhCE,EAAwB,iBAAO,CAC1C1D,KAAM2D,EAAAA,GAD6B,EAIxBC,EAA8B,SAACJ,GAAD,MAAY,CACrDxD,KAAM6D,EAAAA,GACNP,QAASE,EAFgC,EAK9BM,EAA2B,SAACN,GAAD,MAAY,CAClDxD,KAAM+D,EAAAA,GACNT,QAASE,EAF6B,EAK3BQ,EAA0B,SAACR,GAAD,MAAY,CACjDxD,KAAMiE,EAAAA,GACNX,QAASE,EAF4B,ECZjCU,G,QAAc,SAAAC,GAAG,OAAI,SAAAC,GAAK,OAAIA,EAAMC,YAAYF,EAAtB,CAAT,GAEjBG,EAAkBJ,EAAY,aAC9BK,EAAeL,EAAY,QAC3BM,EAAiBN,EAAY,cAC7BO,EAAwBP,EAAY,iBAEpCQ,EAAeR,EAAY,QAC3BS,EAAwBT,EAAY,iBAEpCU,EAAwBV,EAAY,iBACpCW,EAAuBX,EAAY,gBAEnCY,EAAwBZ,EAAY,iBACpCa,EAAuBb,EAAY,gBAEnCc,EAAwBd,EAAY,iBACpCe,EAAuBf,EAAY,gBAE5BgB,EAA6B,WACxC,IAAM9B,GAAQ+B,EAAAA,EAAAA,MACRrD,EAAOsB,EAAMgC,IAAI,SAAW,EAC5BC,EAAWjC,EAAMgC,IAAI,aAAe,GACpCE,EAAalC,EAAMgC,IAAI,cAE7B,OAAOG,EAAAA,EAAAA,UAAQ,WACb,MAAO,CACLzD,KAAAA,EACAuD,SAAAA,EACAG,oBAAqB,OACrBF,WAAYA,QAAcG,EAG7B,GAAE,CAAC3D,EAAMuD,EAAUC,GACrB,EAEYI,EAAkB,SAAClC,GAC9B,OAAOmC,EAAAA,EAAAA,IAAgB,CACrBC,OAAQzC,EACRmB,gBAAAA,EACAuB,aAActB,EACduB,eAAgBrB,EAChBjB,MAAAA,GAEH,EAOYuC,EAA2B,WACtC,OAAOC,EAAAA,EAAAA,IAAYxB,EACpB,EAEYyB,EAAqB,SAAC5B,EAAa6B,GAC9C,IAAIZ,EAAa,KAWjB,OAVA,OAAIjB,QAAJ,IAAIA,GAAAA,EAAaiB,aACfA,EAAaY,EAASC,MAAK,SAAAtE,GAAC,OAAIA,EAAEuE,IAAM/B,EAAYiB,UAAxB,OAE1BA,EAAa,CACXe,MAAOf,EAAWc,GAClBE,MAAOhB,EAAWiB,QAKjBhB,EAAAA,EAAAA,UAAQ,WACb,MAAO,CACLa,IAAe,OAAX/B,QAAW,IAAXA,OAAA,EAAAA,EAAa+B,KAAM,KACvBd,WAAYA,EACZiB,MAAiB,OAAXlC,QAAW,IAAXA,OAAA,EAAAA,EAAakC,OAAQ,GAC3BC,SAAoB,OAAXnC,QAAW,IAAXA,OAAA,EAAAA,EAAamC,UAAW,GACjCC,aAAwB,OAAXpC,QAAW,IAAXA,OAAA,EAAAA,EAAaoC,cAAe,GAE5C,GAAE,CAACpC,EAAaiB,GAClB,EAEYoB,EAAuB,WAClC,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,IAAU,CAC1CvC,gBAAAA,EACAsB,OAAQrC,IAFV,eAAOuD,EAAP,KAAkBC,EAAlB,MAOAC,EAAAA,EAAAA,IAAWpC,EAAuB,8BAFV,kBAAM+B,EAAS,eAAf,KAGxBM,EAAAA,EAAAA,IAAUpC,EAAsB,6BAOhC,MAAO,CAACiC,EALc,SAACI,GAAY,IAAD,EAC1BC,GAAI,kBAAOD,GAAP,IAAe5B,WAAU,UAAE4B,EAAO5B,kBAAT,aAAE,EAAmBe,QACxD,OAAOU,EAAaI,EACrB,EAGF,EAEYC,EAAuB,WAClC,IAAMT,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,IAAU,CAC1CvC,gBAAAA,EACAsB,OAAQ9B,IAFV,eAAOgD,EAAP,KAAkBC,EAAlB,MAOAC,EAAAA,EAAAA,IAAWlC,EAAuB,8BAFV,kBAAM6B,EAAS,eAAf,KAGxBM,EAAAA,EAAAA,IAAUlC,EAAsB,6BAOhC,MAAO,CAAC+B,EALc,SAACI,GAAY,IAAD,EAC1BC,GAAI,kBAAOD,GAAP,IAAe5B,WAAU,UAAE4B,EAAO5B,kBAAT,aAAE,EAAmBe,QACxD,OAAOU,EAAaI,EACrB,EAGF,EAEYE,EAAsB,YACjCC,EAAAA,EAAAA,IAAc5D,EACf,EAEY6D,EAAuB,SAAC/D,GACnC,OAAOmC,EAAAA,EAAAA,IAAgB,CACrBC,OAAQhC,EACRU,gBAAAA,EACAuB,aAAcnB,EACdoB,eAAgBnB,EAChBnB,MAAAA,GAEH,EAEYgE,EAAuB,SAACC,GACnC,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCd,EAAAA,EAAAA,IAAU,CAC1CvC,gBAAAA,EACAsB,OAAQ5B,IAFV,eAAO8C,EAAP,KAAkBC,EAAlB,KAUA,OAHAC,EAAAA,EAAAA,IAAWhC,EAAuB,8BAFV,WAAO0C,EAASvE,EAAgBsE,GAAS,KAGjER,EAAAA,EAAAA,IAAUhC,EAAsB,6BAEzB,CAAC6B,EAAWC,EACpB,C,sTC7JYa,EAAc,SAAAxE,GAAK,MAAK,CACnCpD,KAAM6H,EAAAA,GACNvE,QAASF,EAFqB,EAKnB0E,EAAuB,SAAAtE,GAAK,MAAK,CAC5CxD,KAAM+H,EAAAA,GACNzE,QAASE,EAF8B,EAK5BwE,EAAoB,iBAAO,CACtChI,KAAMiI,EAAAA,GADyB,EAIpBC,EAA0B,SAAC1E,GAAD,MAAY,CACjDxD,KAAMmI,EAAAA,GACN7E,QAASE,EAF4B,EAK1B4E,EAAuB,SAAC5E,GAAD,MAAY,CAC9CxD,KAAMqI,EAAAA,GACN/E,QAASE,EAFyB,EAKvB8E,EAAuB,SAAC9E,GAAD,MAAY,CAC9CxD,KAAMuI,EAAAA,GACNjF,QAASE,EAFyB,ECZ9BU,G,QAAc,SAAAC,GAAG,OAAI,SAAAC,GAAK,OAAIA,EAAMoE,QAAQrE,EAAlB,CAAT,GAEjBG,EAAkBJ,EAAY,aAC9BK,EAAeL,EAAY,QAC3BM,EAAiBN,EAAY,cAC7BO,EAAwBP,EAAY,iBAEpCQ,EAAeR,EAAY,QAC3BS,EAAwBT,EAAY,iBAEpCU,EAAwBV,EAAY,iBACpCW,EAAuBX,EAAY,gBAEnCY,EAAwBZ,EAAY,iBACpCa,EAAuBb,EAAY,gBAEnCc,EAAwBd,EAAY,iBACpCe,EAAuBf,EAAY,gBAE5BuE,EAAyB,WACpC,IAAMrF,GAAQ+B,EAAAA,EAAAA,MACRrD,EAAOsB,EAAMgC,IAAI,SAAW,EAC5BC,EAAWjC,EAAMgC,IAAI,aAAe,GAE1C,OAAOG,EAAAA,EAAAA,UAAQ,WACb,MAAO,CACLzD,KAAAA,EACAuD,SAAAA,EACAG,oBAAqB,OAGxB,GAAE,CAAC1D,EAAMuD,GACX,EAEYqD,EAAc,SAAClF,GAC1B,OAAOmC,EAAAA,EAAAA,IAAgB,CACrBC,OAAQgC,EACRtD,gBAAAA,EACAuB,aAActB,EACduB,eAAgBrB,EAChBjB,MAAAA,GAEH,EAOYmF,EAAuB,WAClC,OAAO3C,EAAAA,EAAAA,IAAYxB,EACpB,EAEYoE,EAAiB,SAACJ,GAC7B,OAAOjD,EAAAA,EAAAA,UAAQ,WACb,MAAO,CACLa,IAAW,OAAPoC,QAAO,IAAPA,OAAA,EAAAA,EAASpC,KAAM,KACnBG,MAAa,OAAPiC,QAAO,IAAPA,OAAA,EAAAA,EAASjC,OAAQ,GACvBsC,QAAe,OAAPL,QAAO,IAAPA,OAAA,EAAAA,EAASK,SAAU,GAC3BpC,aAAoB,OAAP+B,QAAO,IAAPA,OAAA,EAAAA,EAAS/B,cAAe,GAExC,GAAE,CAAC+B,GACL,EAEYM,EAAmB,WAC9B,IAAMnC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,IAAU,CAC1CvC,gBAAAA,EACAsB,OAAQkC,IAFV,eAAOhB,EAAP,KAAkBC,EAAlB,KAUA,OAHAC,EAAAA,EAAAA,IAAWpC,EAAuB,0BAFV,kBAAM+B,EAAS,WAAf,KAGxBM,EAAAA,EAAAA,IAAUpC,EAAsB,yBAEzB,CAACiC,EAAWC,EACpB,EAEYgC,EAAmB,WAC9B,IAAMpC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,IAAU,CAC1CvC,gBAAAA,EACAsB,OAAQwC,IAFV,eAAOtB,EAAP,KAAkBC,EAAlB,KAUA,OAHAC,EAAAA,EAAAA,IAAWlC,EAAuB,0BAFV,kBAAM6B,EAAS,WAAf,KAGxBM,EAAAA,EAAAA,IAAUlC,EAAsB,yBAEzB,CAAC+B,EAAWC,EACpB,EAEYiC,EAAkB,YAC7B1B,EAAAA,EAAAA,IAAcU,EACf,EAEYiB,EAAmB,SAACzF,GAC/B,OAAOmC,EAAAA,EAAAA,IAAgB,CACrBC,OAAQsC,EACR5D,gBAAAA,EACAuB,aAAcnB,EACdoB,eAAgBnB,EAChBnB,MAAAA,GAEH,EAEY0F,EAAmB,SAACzB,GAC/B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCd,EAAAA,EAAAA,IAAU,CAC1CvC,gBAAAA,EACAsB,OAAQ0C,IAFV,eAAOxB,EAAP,KAAkBC,EAAlB,KAUA,OAHAC,EAAAA,EAAAA,IAAWhC,EAAuB,0BAFV,WAAO0C,EAASE,EAAYH,GAAS,KAG7DR,EAAAA,EAAAA,IAAUhC,EAAsB,yBAEzB,CAAC6B,EAAWC,EACpB,C,+RCrIYoC,EAAc,SAAA/F,GAAK,MAAK,CACnCpD,KAAMoJ,EAAAA,GACN9F,QAASF,EAFqB,EAKnBiG,EAAuB,SAAA7F,GAAK,MAAK,CAC5CxD,KAAMsJ,EAAAA,GACNhG,QAASE,EAF8B,EAK5B+F,EAAoB,iBAAO,CACtCvJ,KAAMwJ,EAAAA,GADyB,EAIpBC,EAAmB,SAAAjG,GAAK,MAAK,CACxCxD,KAAM0J,EAAAA,GACNpG,QAASE,EAF0B,EAKxBmG,EAAuB,SAACnG,GAAD,MAAY,CAC9CxD,KAAM4J,EAAAA,GACNtG,QAASE,EAFyB,ECT9BqG,EAAU,CACd,WAAc,UACd,SAAY,WACZ,OAAU,cACV,QAAW,UACX,MAAS,QACT,KAAQ,OACR,IAAO,MACP,IAAO,MACP,oBAAqB,mBACrB,iBAAkB,gBAClB,eAAgB,eAGZ3F,EAAc,SAAAC,GAAG,OAAI,SAAAC,GAAK,OAAIA,EAAM0F,QAAQ3F,EAAlB,CAAT,EAEjBG,EAAkBJ,EAAY,aAC9BK,EAAeL,EAAY,QAC3BM,EAAiBN,EAAY,cAC7BO,EAAwBP,EAAY,iBAEpCQ,EAAeR,EAAY,QAC3BS,EAAwBT,EAAY,iBAEpCU,EAAwBV,EAAY,iBACpCW,EAAuBX,EAAY,gBAEnCc,EAAwBd,EAAY,iBACpCe,EAAuBf,EAAY,gBAE5B6F,EAAyB,WACpC,IAAM3G,GAAQ+B,EAAAA,EAAAA,MACRrD,EAAOsB,EAAMgC,IAAI,SAAW,EAC5BC,EAAWjC,EAAMgC,IAAI,aAAe,GACpCE,EAAalC,EAAMgC,IAAI,cACvB4E,EAAS5G,EAAMgC,IAAI,UACnB6E,EAAW7G,EAAMgC,IAAI,YAE3B,OAAOG,EAAAA,EAAAA,UAAQ,WACb,MAAO,CACLzD,KAAAA,EACAuD,SAAAA,EACA6E,kBAAkB,EAClBC,cAAc,EACd3E,oBAAqB,OACrBF,WAAYA,QAAcG,EAC1BuE,OAAQA,QAAUvE,EAClBwE,SAAUA,QAAYxE,EAGzB,GAAE,CAAC3D,EAAMuD,EAAUC,EAAY0E,EAAQC,GACzC,EAEYG,EAAc,SAAA5G,GACzB,OAAOmC,EAAAA,EAAAA,IAAgB,CACrBC,OAAQuD,EACR7E,gBAAAA,EACAuB,aAActB,EACduB,eAAgBrB,EAChBjB,MAAAA,GAEH,EAEY6G,EAAuB,WAClC,OAAOrE,EAAAA,EAAAA,IAAYxB,EACpB,EAEY8F,EAAiB,WAC5B,OAAO/E,EAAAA,EAAAA,UAAQ,WACb,MAAO,CACLiD,QAAS,GACTyB,SAAU,GACV5F,YAAa,GACbkG,QAAS,GACTC,MAAO,GACPC,KAAM,GACNC,IAAK,KACLC,QAAS,KACTC,IAAK,KACLC,iBAAkB,GAClBC,cAAe,GACfC,YAAa,GAEhB,GAAE,GACJ,EAEYC,EAAmB,SAACC,GAC/B,IAAMtE,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,IAAU,CAC1CvC,gBAAAA,EACAsB,OAAQyD,IAFV,eAAOvC,EAAP,KAAkBC,EAAlB,MAeAC,EAAAA,EAAAA,IAAWpC,EAAuB,0BAVV,kBAAM+B,EAAS,IAAf,KAWxBM,EAAAA,EAAAA,IAAUpC,EAAsB,yBATX,SAAChD,GAChBA,EAAEqJ,QACJC,OAAOC,KAAKvJ,EAAEqJ,QAAQlI,KAAI,SAACuD,GACzB0E,EAAKI,SAASxB,EAAQtD,IAASA,EAAM,CAAE+E,QAASzJ,EAAEqJ,OAAO3E,GAAM,IAChE,GAEJ,IA4BD,MAAO,CAACO,EAvBc,SAACI,GACrB,IAAIqE,EAAW,IAAIC,SACbrE,EAAO,CACX,WAAcD,EAAOsB,QAAQnC,MAC7B,SAAYa,EAAO+C,SAAS5D,MAC5B,OAAUa,EAAO7C,YAAYgC,MAC7B,QAAWa,EAAOqD,QAClB,MAASrD,EAAOsD,MAChB,KAAQtD,EAAOuD,KACf,IAAOvD,EAAOwD,IAAMxD,EAAOwD,IAAI,GAAK,KACpC,IAAOxD,EAAO0D,IAAM1D,EAAO0D,IAAI,GAAK,KACpC,QAAW1D,EAAOyD,QAAUzD,EAAOyD,QAAQ,GAAK,KAChD,oBAAqBzD,EAAO2D,iBAC5B,iBAAkB3D,EAAO4D,cACzB,eAAgB5D,EAAO6D,aAMzB,OAJAI,OAAOC,KAAKjE,GAAMnE,KAAI,SAACmB,GACrBoH,EAASE,OAAOtH,EAAKgD,EAAKhD,GAC3B,IAEM4C,EAAawE,EACrB,EAGF,EAEYG,EAAkB,YAC7BpE,EAAAA,EAAAA,IAAciC,EACf,EAEYoC,EAAmB,SAACnI,GAC/B,OAAOmC,EAAAA,EAAAA,IAAgB,CACrBC,OAAQ6D,EACRnF,gBAAAA,EACAuB,aAAcnB,EACdoB,eAAgBnB,EAChBnB,MAAAA,GAEH,EAEYoI,EAAmB,SAACnE,GAC/B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCd,EAAAA,EAAAA,IAAU,CAC1CvC,gBAAAA,EACAsB,OAAQ+D,IAFV,eAAO7C,EAAP,KAAkBC,EAAlB,KAUA,OAHAC,EAAAA,EAAAA,IAAWhC,EAAuB,0BAFV,WAAO0C,EAASyB,EAAY1B,GAAS,KAG7DR,EAAAA,EAAAA,IAAUhC,EAAsB,yBAEzB,CAAC6B,EAAWC,EACpB,C,qOC7KK8E,EAAkB,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,QAAS9I,EAAuB,EAAvBA,MAAO+I,EAAgB,EAAhBA,WAC9C,GAA4B1K,EAAAA,EAAAA,WAAS,GAArC,eAAO2K,EAAP,KAAeC,EAAf,MAGAzK,EAAAA,EAAAA,YAAU,WACJwK,GACFE,YAAW,WACTD,GAAU,EACX,GAAE,IAEN,GAAE,CAACD,IAMJ,OACE,UAAC,EAAAG,SAAD,YACE,SAAC,kBAAD,CACEN,KAAMC,EACNM,OARS,WACbH,GAAU,EACX,EAIG,UAIE,mBACElM,KAAK,SACLP,UAAU,8DACV6M,SAAUL,EACV7F,GAAE,yBAAoBnD,GAJxB,SAMG6I,OAGL,SAAC,KAAD,CAASS,UAAU,SAAShN,OAAQ0M,EAAQO,OAAM,yBAAoBvJ,GAAtE,UACE,SAAC,IAAD,UAAc+I,QAIrB,EAED,IAEAH,EAAgBjM,aAAe,CAC7BoM,WAAY,U,wBCrCRS,EAAkB,SAACzM,GACvB,IAAI0M,EAAgB,GACpB,OAAO1M,GACL,IAAK,UACH0M,EAAgB,qDAChB,MACF,IAAK,MACHA,EAAgB,mDAChB,MACF,QACEA,EAAgB,yCAEpB,OAAOA,CACR,EAED,SAASC,EAAT,GAA8E,IAAhDC,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,UAAWzL,EAA0B,EAA1BA,cAAe9B,EAAW,EAAXA,SAC1DwN,GAAUC,EAAAA,EAAAA,IAAQ,SACxB,OACE,SAAC,EAAAX,SAAD,WACE,gBAAK3M,UAAU,uBAAf,UACE,iBAAKA,UAAU,YAAf,WACE,gBAAKA,UAAU,mBAAf,UACE,mBAAOA,UAAU,kDAAjB,WACE,4BACE,2BACE,eAAIA,UAAU,kBACd,eAAIA,UAAU,eAAd,yBACA,eAAIA,UAAU,eAAd,sBACA,eAAIA,UAAU,eAAd,0BACA,eAAIA,UAAU,eAAd,sBACA,eAAIA,UAAU,eAAd,oBACA,eAAIA,UAAU,uBAGlB,2BACGmN,EAAS5J,KAAI,SAAC8G,EAAS3F,GAAV,OACZ,2BACE,yBAAI,cAAG1E,UAAWgN,EAAe3C,EAAQG,eACzC,yBAAK+C,EAAAA,EAAAA,GAAelD,EAAQmD,eAC5B,wBAAKnD,EAAQoD,gBACb,gBAAIzN,UAAU,uBAAd,WACE,kBAAOA,UAAU,WAAjB,SAA6BqK,EAAQqD,YACrC,mBACA,2BAAQrD,EAAQtD,cAElB,wBAAKsD,EAAQS,WACb,wBAAKT,EAAQU,SACb,gBAAI/K,UAAU,WAAd,WACE,SAAC,KAAD,CACEA,UAAU,oCACVkB,GAAE,mBAAcmJ,EAAQ1D,GAAtB,YAA4B0D,EAAQoD,aAAaE,MAAM,KAAKC,KAAK,KAAjE,YAAyEvD,EAAQG,UAFrF,qBAMA,SAAC,EAAD,CACE6B,KAAK,QACLC,QAAO,UAAKuB,OAAOC,SAASC,OAArB,oBAAuC1D,EAAQ1D,GAA/C,YAAqD0D,EAAQoD,aAAaE,MAAM,KAAKC,KAAK,KAA1F,YAAkGvD,EAAQG,UACjHhH,MAAOkB,EACP6H,WAAW,mCAEZc,GAAU,SAACW,EAAA,EAAD,CAAcnO,SAAU,kBAAMA,EAASwK,EAAf,EAAyBrK,UAAU,SAAY,UAxB7EqK,EAAQ1D,GADL,YAgCpB,gBAAK3G,UAAU,qBAAf,SACGoN,EAAUa,OAAQ,SAAC3M,EAAA,EAAD,CACjBE,cAAe4L,EAAUa,MACzBxM,WAAY2L,EAAUxH,SACtBlE,eAAgB,EAChBE,aAAcwL,EAAUc,aACxBvM,cAAeA,EACf3B,UAAU,SACP,aAMhB,CAED,QAEAkN,EAAmB/M,aAAe,CAAC,E,cCpF7B6M,EAAkB,SAACzM,GACvB,IAAI0M,EAAgB,GACpB,OAAO1M,GACL,IAAK,UACH0M,EAAgB,qDAChB,MACF,IAAK,MACHA,EAAgB,mDAChB,MACF,QACEA,EAAgB,mDAEpB,OAAOA,CACR,EAED,SAASkB,EAAT,GAA6E,IAAhDhB,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,UAAWzL,EAA0B,EAA1BA,cAAe9B,EAAW,EAAXA,SACzDwN,GAAUC,EAAAA,EAAAA,IAAQ,SAKlBc,EAAYnM,KAAKC,KAAKkL,EAAUa,OAASb,EAAUxH,UACzD,OACE,SAAC,EAAA+G,SAAD,WACE,SAAC,IAAD,CACE0B,WAAYlB,EAASnK,OACrBsL,KARgB,WACpB3M,GAAeyL,EAAUc,aAAe,EACzC,EAOKK,SAAUnB,EAAUc,aAAeE,EACnCI,OAAQ,KAJV,SAMGrB,EAAS5J,KAAI,SAAC8G,EAAS3F,GAAV,aACZ,gBAAK1E,UAAU,wBAAf,UACE,gBAAKA,UAAU,YAAf,UACE,iBAAKA,UAAU,eAAf,WACE,gBAAKA,UAAU,yBAAf,UACE,gBAAKA,UAAU,sBAAf,UACE,cAAGA,UAAWgN,EAAe3C,EAAQG,iBAGzC,iBAAKxK,UAAU,yBAAf,WACE,cAAGA,UAAU,aAAb,UAA2BuN,EAAAA,EAAAA,GAAelD,EAAQmD,eAClD,eAAIxN,UAAU,OAAd,SAAsBqK,EAAQoD,gBAC9B,cAAGzN,UAAU,QAAb,SAAsBqK,EAAQU,SAC9B,eAAG/K,UAAU,mBAAb,UACGqK,EAAQqD,UACT,mBACA,qCAAQrD,EAAQzF,mBAAhB,aAAQ,EAAqBmC,iBAGjC,iBAAK/G,UAAU,wBAAf,WACE,SAAC,KAAD,CACEA,UAAU,oCACVkB,GAAE,mBAAcmJ,EAAQ1D,GAAtB,YAA4B0D,EAAQoD,aAAaE,MAAM,KAAKC,KAAK,KAAjE,YAAyEvD,EAAQG,UAFrF,qBAMA,SAAC,EAAD,CACE6B,KAAK,QACLC,QAAO,UAAKuB,OAAOC,SAASC,OAArB,oBAAuC1D,EAAQ1D,GAA/C,YAAqD0D,EAAQoD,aAAaE,MAAM,KAAKC,KAAK,KAA1F,YAAkGvD,EAAQG,UACjHhH,MAAOkB,EACP6H,WAAW,mCAEZc,GAAU,SAACW,EAAA,EAAD,CAAcnO,SAAU,kBAAMA,EAASwK,EAAf,EAAyBrK,UAAU,cAAiB,cA/BnDqK,EAAQ1D,GADxC,OAyCrB,CAED,QAEAwH,EAAkBhO,aAAe,CAAC,ECvElC,IAAMsO,EAAkB,CACtB,CAAE7H,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,UAAWC,MAAO,YAgJ7B,MA7IA,WACE,IAAMK,GAAWC,EAAAA,EAAAA,MACXuH,GAAcpE,EAAAA,EAAAA,MACpB,GAAmBK,EAAAA,EAAAA,IAAY+D,GAAxBvB,GAAP,eACA,GAAyBhB,EAAAA,EAAAA,IAAiBuC,GAAjCC,GAAT,eACMvB,GAAYxC,EAAAA,EAAAA,MAEZgE,GAAaC,EAAAA,EAAAA,KACnB,GAAkBC,EAAAA,EAAAA,MAATC,GAAT,eAEA,GAAwBlN,EAAAA,EAAAA,UAAS,CAAC+D,SAAU,IAArCoJ,GAAP,eACA,GAAmB/F,EAAAA,EAAAA,IAAY+F,GAAxBvI,GAAP,gBAEAzE,EAAAA,EAAAA,YAAU,WACJ6L,OAAOoB,WAAa,KACtB/H,EACE,CACEgI,SAAU,KAEZ,CAAEC,SAAS,GAIhB,GAAE,IAEH,OAAkDtN,EAAAA,EAAAA,UAAS,CACzD+D,SAAU,EACVC,WAAY6I,EAAY7I,YAAc,OAFxC,eAAOuJ,EAAP,KAA0BC,EAA1B,KAIA,GAAuBpJ,EAAAA,EAAAA,IAAgByI,EAAY7I,WAAauJ,EAAoB,MAA7EE,GAAP,eAEMC,EAAe,SAAChP,EAAMqG,GAC1B,IAAMoB,GAAM,UAAO0G,GACnB1G,EAAOzH,GAAQqG,EACF,SAATrG,IACFyH,EAAO3F,KAAO,GAEH,eAAT9B,IACFyH,EAAOuC,YAASvE,EAChBqJ,GAAqB,SAAA/O,GAAC,yBAASA,GAAT,IAAYuF,WAAYe,GAAxB,KAExBM,EACE,CACEgI,SAAU,IACVM,OAAO,IAAD,OAAMC,EAAAA,UAAsBzH,KAEpC,CAAEmH,SAAS,GAEd,EAEKxN,EAAgB,SAACU,GACrBkN,EAAa,OAAQlN,EACtB,EAEKqN,EAAiB,SAACnP,EAAMqG,GAC5B2I,EAAahP,EAAD,OAAOqG,QAAP,IAAOA,OAAP,EAAOA,EAAOA,MAC3B,EAEK+I,EAAiBlJ,EAASlD,KAAI,SAAAnB,GAAC,MAAK,CAACwE,MAAOxE,EAAEuE,GAAIE,MAAOzE,EAAE0E,KAA5B,IAC/B8I,EAAqBlB,EAAY7I,WAAayJ,EAAa/L,KAAI,SAAAnB,GAAC,MAAK,CAACwE,MAAOxE,EAAEuE,GAAIE,MAAOzE,EAAE0E,KAA5B,IAAsC,GAE5G,OACE,SAAC,EAAA6F,SAAD,WACE,gBAAK3M,UAAU,iCAAf,UACE,gBAAKA,UAAU,MAAf,UACE,iBAAKA,UAAU,SAAf,WACE,gBAAKA,UAAU,sBAAf,UACE,gBAAKA,UAAU,aAAf,UACE,iBAAKA,UAAU,MAAf,WACE,gBAAKA,UAAU,oBAAf,UACE,kBAAMA,UAAU,oFAAhB,WACE,gBAAKA,UAAU,2BAAf,UACE,iBAAKA,UAAU,2CAAf,WACE,kBAAO6P,QAAQ,aAAa7P,UAAU,kBAAtC,yBACA,SAAC,KAAD,CACE8P,QAASH,EACT/I,MAAO+I,EAAejJ,MAAK,SAAAtE,GAAC,OAAIA,EAAEwE,OAAS8H,EAAY7I,UAA3B,IAC5BkK,SAAU,SAACnJ,GAAD,OAAW8I,EAAe,aAAc9I,EAAxC,EACVoJ,YAAY,iBACZC,aAAW,UAIjB,gBAAKjQ,UAAU,2BAAf,UACE,iBAAKA,UAAU,2CAAf,WACE,kBAAO6P,QAAQ,SAAS7P,UAAU,kBAAlC,0BACA,SAAC,KAAD,CACE8P,QAASF,EACThJ,MAAOgJ,EAAmBlJ,MAAK,SAAAtE,GAAC,OAAIA,EAAEwE,OAAS8H,EAAYnE,MAA3B,KAAsC,KACtEwF,SAAU,SAACnJ,GAAD,OAAW8I,EAAe,SAAU9I,EAApC,EACVoJ,YAAY,qBACZC,aAAW,UAIjB,gBAAKjQ,UAAU,2BAAf,UACE,iBAAKA,UAAU,2CAAf,WACE,kBAAO6P,QAAQ,WAAW7P,UAAU,kBAApC,uBACA,SAAC,KAAD,CACE8P,QAASrB,EACT7H,MAAO6H,EAAgB/H,MAAK,SAAAtE,GAAC,OAAIA,EAAEwE,OAAS8H,EAAYlE,QAA3B,IAC7BuF,SAAU,SAACnJ,GAAD,OAAW8I,EAAe,WAAY9I,EAAtC,EACVoJ,YAAY,kBACZC,aAAW,cAMpBlB,GAAQ,gBAAK/O,UAAU,oBAAf,UACP,gBAAKA,UAAU,2BAAf,UACE,UAAC,KAAD,CAAMkB,GAAI,UAAWlB,UAAU,uCAA/B,WACE,cAAGA,UAAU,wBADf,iBAIK,YAId4O,EAAWsB,OAAS,KACnB,SAAC,EAAD,CACE/C,SAAUA,EACVC,UAAWA,EACXzL,cAAeA,EACf9B,SAAU8O,KAGZ,SAAC,EAAD,CACExB,SAAUA,EACVC,UAAWA,EACXzL,cAAeA,EACf9B,SAAU8O,YAQzB,C,8EC7JYpB,EAAiB,SAAA4C,GAC5B,OAAKA,EAIEC,IAAOD,GAAUE,OAAO,oBAHtB,EAIV,C","sources":["components/Modal/DeleteModal.js","components/Form/ButtonDelete.js","components/Pagination/Pagination.js","redux/environment/action.js","hooks/environment/index.js","redux/project/action.js","hooks/project/index.js","redux/release/action.js","hooks/release/index.js","components/CopyToClipboard/CopyToClipboard.js","components/Release/list.desktop.js","components/Release/list.mobile.js","pages/Home/index.js","utils/datetime.js"],"sourcesContent":["import { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport PropTypes from 'prop-types'\n\nfunction DeleteModal ({isModalOpen, toggleModal, onDelete}) {\n  return (\n    <div>\n      <Modal isOpen={isModalOpen} toggle={toggleModal}>\n        <ModalHeader></ModalHeader>\n        <ModalBody className=\"text-center\">\n          <h3>Are you sure?</h3>\n          <p>You won&#39;t be able to revert this!</p>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"danger text-white\" onClick={onDelete}>Delete</Button>{' '}\n          <Button color=\"secondary\" onClick={toggleModal}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  )\n}\n\nexport default DeleteModal\n\nDeleteModal.defaultProps = {\n  isModalOpen: false,\n  toggleModal: () => {},\n  onDelete: () => {}\n}\n\nDeleteModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  toggleModal: PropTypes.func,\n  onDelete: PropTypes.func,\n}\n","import { useReducer } from 'react';\nimport PropTypes from 'prop-types'\nimport DeleteModal from \"components/Modal/DeleteModal\"\n\nconst Button = ({onDelete, className}) => {\n  const [isModalOpen, toggleModal] = useReducer(p => !p, false);\n  return (\n    <>\n      <button\n        type=\"button\"\n        className={\"btn btn-sm btn-danger text-white\" + (className ? (' ' + className) : ' mx-2')}\n        onClick={toggleModal}\n      >\n        Delete\n      </button>\n      <DeleteModal\n        isModalOpen={isModalOpen}\n        toggleModal={toggleModal}\n        onDelete={() => {onDelete(); toggleModal()}}\n      />\n    </>\n  );\n}\n\nexport default Button\n\nButton.defaultProps = {\n  onDelete: () => {}\n}\n\nButton.propTypes = {\n  onDelete: PropTypes.func,\n  className: PropTypes.string,\n}\n","import { useState, useEffect } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst LEFT_PAGE = \"LEFT\";\r\nconst LEFT_PAGE_DISABLE = \"LEFT_DISABLE\";\r\nconst RIGHT_PAGE = \"RIGHT\";\r\nconst RIGHT_PAGE_DISABLE = \"RIGHT_DISABLE\";\r\n\r\nconst FIRST_PAGE = \"FIRST\";\r\nconst FIRST_PAGE_DISABLE = \"FIRST_DISABLE\";\r\nconst LAST_PAGE = \"LAST\";\r\nconst LAST_PAGE_DISABLE = \"LAST_DISABLE\";\r\n\r\nconst range = (from, to, step = 1) => {\r\n  let i = from;\r\n  const range = [];\r\n\r\n  while (i <= to) {\r\n    range.push(i);\r\n    i += step;\r\n  }\r\n\r\n  return range;\r\n};\r\n\r\nconst Pagination = props => {\r\n  const {\r\n    totalRecords,\r\n    pageLimit,\r\n    pageNeighbours,\r\n    onPageChanged,\r\n    currentPage,\r\n    className\r\n  } = props;\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  useEffect(() => {\r\n    setTotalPages(Math.ceil(totalRecords / pageLimit));\r\n    // eslint-disable-next-line\r\n  }, [currentPage, totalRecords]);\r\n\r\n  const fetchPageNumbers = () => {\r\n    const totalNumbers = pageNeighbours //  * 2 + 3;\r\n    // const totalBlocks = totalNumbers + 2;\r\n\r\n    // if (totalPages > totalBlocks) {\r\n    const startPage = Math.max(1, currentPage - pageNeighbours);\r\n    const endPage = Math.min(totalPages, currentPage + pageNeighbours);\r\n\r\n    let pages = range(startPage, endPage);\r\n\r\n    const hasLeftSpill = startPage > 2;\r\n    const hasRightSpill = totalPages - endPage > 1;\r\n    const spillOffset = totalNumbers - (pages.length + 1);\r\n\r\n    const btnLeft = currentPage > 1 ? LEFT_PAGE : LEFT_PAGE_DISABLE\r\n    const btnRight = currentPage < totalPages ? RIGHT_PAGE : RIGHT_PAGE_DISABLE\r\n\r\n    const btnFirst = currentPage > 1 ? FIRST_PAGE : FIRST_PAGE_DISABLE\r\n    const btnLast = currentPage < totalPages ? LAST_PAGE : LAST_PAGE_DISABLE\r\n\r\n    switch (true) {\r\n      // handle: (1) < {5 6} [7] {8 9} (10)\r\n      case hasLeftSpill && !hasRightSpill: {\r\n        const extraPages = range(startPage - spillOffset, startPage - 1);\r\n        pages = [btnFirst, btnLeft, ...extraPages, ...pages, btnRight, btnLast];\r\n        break;\r\n      }\r\n      // handle: (1) < {4 5} [6] {7 8} > (10)\r\n      case hasLeftSpill && hasRightSpill:\r\n      default: {\r\n        pages = [btnFirst, btnLeft, ...pages, btnRight, btnLast];\r\n        break;\r\n      }\r\n    }\r\n    return [...pages];\r\n    // }\r\n    // return [FIRST_PAGE_DISABLE, LEFT_PAGE_DISABLE, ...(range(1, totalPages)), RIGHT_PAGE_DISABLE, LAST_PAGE_DISABLE];\r\n  };\r\n\r\n  const clickPageChanged = (e, page) => {\r\n    e.preventDefault()\r\n    if (page < 1 || page > totalPages || page === currentPage) {\r\n      return\r\n    }\r\n    onPageChanged(page)\r\n  }\r\n\r\n  const pages = fetchPageNumbers() || [];\r\n\r\n  return (\r\n    <ul className={`pagination pagination-style-one justify-content-center ${className || 'pt-50'}`}>\r\n      {pages.map((page, index) => {\r\n        if (page === LEFT_PAGE || page === LEFT_PAGE_DISABLE)\r\n          return (\r\n            <li key={index} className={`page-item page-arrow${page === LEFT_PAGE_DISABLE ? ' disabled' : ''}`}>\r\n              <a\r\n                href=\"#\"\r\n                className=\"page-link\"\r\n                aria-label=\"Previous\"\r\n                onClick={e => clickPageChanged(e, currentPage - 1)}\r\n              >\r\n                prev\r\n                {/*<i className=\"m-r-10 mdi mdi-chevron-left\"></i>*/}\r\n                {/*<span aria-hidden=\"true\">&laquo;</span>*/}\r\n                {/*<span className=\"sr-only\">Previous</span>*/}\r\n              </a>\r\n            </li>\r\n          );\r\n\r\n        if (page === RIGHT_PAGE || page === RIGHT_PAGE_DISABLE)\r\n          return (\r\n            <li key={index} className={`page-item page-arrow${page === RIGHT_PAGE_DISABLE ? ' disabled' : ''}`}>\r\n              <a\r\n                href=\"#\"\r\n                className=\"page-link\"\r\n                aria-label=\"Next\"\r\n                onClick={e => clickPageChanged(e, currentPage + 1)}\r\n              >\r\n                next\r\n                {/*<i className=\"m-r-10 mdi mdi-chevron-right\"></i>*/}\r\n                {/*<span aria-hidden=\"true\">&raquo;</span>*/}\r\n                {/*<span className=\"sr-only\">Next</span>*/}\r\n              </a>\r\n            </li>\r\n          );\r\n        if (page === FIRST_PAGE || page === FIRST_PAGE_DISABLE)\r\n          return (\r\n            <li key={index} className={`page-item page-arrow${page === FIRST_PAGE_DISABLE ? ' disabled' : ''}`}>\r\n              <a\r\n                href=\"#\"\r\n                className=\"page-link\"\r\n                aria-label=\"Previous\"\r\n                onClick={e => clickPageChanged(e, 1)}\r\n              >\r\n                first\r\n                {/*<i className=\"m-r-10 mdi mdi-chevron-left\"></i>*/}\r\n                {/*<span aria-hidden=\"true\">&laquo;</span>*/}\r\n                {/*<span className=\"sr-only\">Previous</span>*/}\r\n              </a>\r\n            </li>\r\n          );\r\n\r\n        if (page === LAST_PAGE || page === LAST_PAGE_DISABLE)\r\n          return (\r\n            <li key={index} className={`page-item page-arrow${page === LAST_PAGE_DISABLE ? ' disabled' : ''}`}>\r\n              <a\r\n                href=\"#\"\r\n                className=\"page-link\"\r\n                aria-label=\"Next\"\r\n                onClick={e => clickPageChanged(e, totalPages)}\r\n              >\r\n                last\r\n                {/*<i className=\"m-r-10 mdi mdi-chevron-right\"></i>*/}\r\n                {/*<span aria-hidden=\"true\">&raquo;</span>*/}\r\n                {/*<span className=\"sr-only\">Next</span>*/}\r\n              </a>\r\n            </li>\r\n          );\r\n\r\n        return (\r\n          <li\r\n            key={index}\r\n            className={`page-item page-arrow${\r\n              currentPage === page ? \" active\" : \"\"\r\n            }`}\r\n          >\r\n            <a\r\n              href=\"#\"\r\n              className=\"page-link\"\r\n              onClick={e => clickPageChanged(e, page)}\r\n            >\r\n              {page}\r\n            </a>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n\r\nPagination.defaultProps = {\r\n  totalRecords: 0,\r\n  pageLimit: 0,\r\n  pageNeighbours: 0,\r\n  onPageChanged: () => {},\r\n  currentPage:0,\r\n}\r\n\r\nPagination.propTypes = {\r\n  totalRecords: PropTypes.number,\r\n  pageLimit: PropTypes.number,\r\n  pageNeighbours: PropTypes.number,\r\n  onPageChanged: PropTypes.func,\r\n  currentPage: PropTypes.number,\r\n  className: PropTypes.string\r\n}\r\n","import {\n  GET_ENVIRONMENTS_REQUEST,\n  CREATE_ENVIRONMENT_REQUEST,\n  RESET_ENVIRONMENT,\n  GET_ENVIRONMENT_DETAIL_REQUEST,\n  UPDATE_ENVIRONMENT_REQUEST,\n  DELETE_ENVIRONMENT_REQUEST,\n} from '../../constants/actionTypes';\n\nexport const getEnvironments = query => ({\n  type: GET_ENVIRONMENTS_REQUEST,\n  payload: query\n});\n\nexport const createEnvironmentRequest = param => ({\n  type: CREATE_ENVIRONMENT_REQUEST,\n  payload: param\n});\n\nexport const resetEnvironmentState = () => ({\n  type: RESET_ENVIRONMENT,\n});\n\nexport const getEnvironmentDetailRequest = (param) => ({\n  type: GET_ENVIRONMENT_DETAIL_REQUEST,\n  payload: param\n});\n\nexport const updateEnvironmentRequest = (param) => ({\n  type: UPDATE_ENVIRONMENT_REQUEST,\n  payload: param\n});\n\nexport const deleteEnviromentRequest = (param) => ({\n  type: DELETE_ENVIRONMENT_REQUEST,\n  payload: param\n});\n","import { useMemo } from 'react';\r\nimport {\r\n  useFailed,\r\n  useFetchByParam,\r\n  useQueryParams,\r\n  useSubmit,\r\n  useSuccess,\r\n  useResetState\r\n} from '../utils';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  getEnvironments,\r\n  createEnvironmentRequest,\r\n  resetEnvironmentState,\r\n  getEnvironmentDetailRequest,\r\n  updateEnvironmentRequest,\r\n  deleteEnviromentRequest,\r\n} from '../../redux/environment/action';\r\nimport Api from 'api'\r\n\r\nconst getSelector = key => state => state.environment[key];\r\n\r\nconst loadingSelector = getSelector('isLoading');\r\nconst listSelector = getSelector('list');\r\nconst paramsSelector = getSelector('listParams');\r\nconst getListFailedSelector = getSelector('getListFailed');\r\n\r\nconst itemSelector = getSelector('item');\r\nconst getItemFailedSelector = getSelector('getItemFailed');\r\n\r\nconst createSuccessSelector = getSelector('createSuccess');\r\nconst createFailedSelector = getSelector('createFailed');\r\n\r\nconst updateSuccessSelector = getSelector('updateSuccess');\r\nconst updateFailedSelector = getSelector('updateFailed');\r\n\r\nconst deleteSuccessSelector = getSelector('deleteSuccess');\r\nconst deleteFailedSelector = getSelector('deleteFailed');\r\n\r\nexport const useEnvironmentsQueryParams = () => {\r\n  const query = useQueryParams();\r\n  const page = query.get('page') || 1;\r\n  const per_page = query.get('per_page') || 10;\r\n  const project_id = query.get('project_id');\r\n\r\n  return useMemo(() => {\r\n    return {\r\n      page,\r\n      per_page,\r\n      order_by_created_at: 'desc',\r\n      project_id: project_id || undefined,\r\n    };\r\n    //eslint-disable-next-line\r\n  }, [page, per_page, project_id]);\r\n};\r\n\r\nexport const useEnvironments = (param) => {\r\n  return useFetchByParam({\r\n    action: getEnvironments,\r\n    loadingSelector,\r\n    dataSelector: listSelector,\r\n    failedSelector: getListFailedSelector,\r\n    param\r\n  });\r\n};\r\n\r\nexport const asyncEnvironments = (param) => {\r\n  return Api.environment.getAll(param)\r\n    .then(res => Promise.resolve(res.data))\r\n};\r\n\r\nexport const useEnvironmentsResParams = () => {\r\n  return useSelector(paramsSelector)\r\n};\r\n\r\nexport const useInitEnvironment = (environment, projects) => {\r\n  let project_id = null\r\n  if (environment?.project_id) {\r\n    project_id = projects.find(e => e.id == environment.project_id)\r\n    if (project_id) {\r\n      project_id = {\r\n        value: project_id.id,\r\n        label: project_id.name,\r\n      }\r\n    }\r\n  }\r\n\r\n  return useMemo(() => {\r\n    return {\r\n      id: environment?.id || null,\r\n      project_id: project_id,\r\n      name: environment?.name || '',\r\n      baseurl: environment?.baseurl || '',\r\n      description: environment?.description || '',\r\n    }\r\n  }, [environment, project_id])\r\n}\r\n\r\nexport const useCreateEnvironment = () => {\r\n  const navigate = useNavigate();\r\n  const [isLoading, handleSubmit] = useSubmit({\r\n    loadingSelector,\r\n    action: createEnvironmentRequest\r\n  });\r\n\r\n  const successCallback = () => navigate(\"/environment\");\r\n\r\n  useSuccess(createSuccessSelector, 'Create environment success', successCallback);\r\n  useFailed(createFailedSelector, 'Create environment Failed');\r\n\r\n  const _handleSubmit = (values) => {\r\n    const data = {...values, project_id: values.project_id?.value}\r\n    return handleSubmit(data)\r\n  }\r\n\r\n  return [isLoading, _handleSubmit];\r\n}\r\n\r\nexport const useUpdateEnvironment = () => {\r\n  const navigate = useNavigate();\r\n  const [isLoading, handleSubmit] = useSubmit({\r\n    loadingSelector,\r\n    action: updateEnvironmentRequest\r\n  });\r\n\r\n  const successCallback = () => navigate(\"/environment\");\r\n\r\n  useSuccess(updateSuccessSelector, 'Update environment success', successCallback);\r\n  useFailed(updateFailedSelector, 'Update environment Failed');\r\n\r\n  const _handleSubmit = (values) => {\r\n    const data = {...values, project_id: values.project_id?.value}\r\n    return handleSubmit(data)\r\n  }\r\n\r\n  return [isLoading, _handleSubmit];\r\n}\r\n\r\nexport const useResetEnvironment = () => {\r\n  useResetState(resetEnvironmentState);\r\n};\r\n\r\nexport const useEnvironmentDetail = (param) => {\r\n  return useFetchByParam({\r\n    action: getEnvironmentDetailRequest,\r\n    loadingSelector,\r\n    dataSelector: itemSelector,\r\n    failedSelector: getItemFailedSelector,\r\n    param\r\n  });\r\n};\r\n\r\nexport const useDeleteEnvironment = (params) => {\r\n  const dispatch = useDispatch();\r\n  const [isLoading, handleSubmit] = useSubmit({\r\n    loadingSelector,\r\n    action: deleteEnviromentRequest\r\n  });\r\n\r\n  const successCallback = () => {dispatch(getEnvironments(params))}\r\n\r\n  useSuccess(deleteSuccessSelector, 'Delete environment success', successCallback);\r\n  useFailed(deleteFailedSelector, 'Delete environment Failed');\r\n\r\n  return [isLoading, handleSubmit];\r\n}\r\n","import {\n  GET_PROJECTS_REQUEST,\n  CREATE_PROJECT_REQUEST,\n  RESET_PROJECT,\n  GET_PROJECT_DETAIL_REQUEST,\n  UPDATE_PROJECT_REQUEST,\n  DELETE_PROJECT_REQUEST,\n} from '../../constants/actionTypes';\n\nexport const getProjects = query => ({\n  type: GET_PROJECTS_REQUEST,\n  payload: query\n});\n\nexport const createProjectRequest = param => ({\n  type: CREATE_PROJECT_REQUEST,\n  payload: param\n});\n\nexport const resetProjectState = () => ({\n  type: RESET_PROJECT,\n});\n\nexport const getProjectDetailRequest = (param) => ({\n  type: GET_PROJECT_DETAIL_REQUEST,\n  payload: param\n});\n\nexport const updateProjectRequest = (param) => ({\n  type: UPDATE_PROJECT_REQUEST,\n  payload: param\n});\n\nexport const deleteProjectRequest = (param) => ({\n  type: DELETE_PROJECT_REQUEST,\n  payload: param\n});\n","import { useMemo } from 'react';\r\nimport {\r\n  useFailed,\r\n  useFetchByParam,\r\n  useQueryParams,\r\n  useSubmit,\r\n  useSuccess,\r\n  useResetState\r\n} from '../utils';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  getProjects,\r\n  createProjectRequest,\r\n  resetProjectState,\r\n  getProjectDetailRequest,\r\n  updateProjectRequest,\r\n  deleteProjectRequest,\r\n} from '../../redux/project/action';\r\nimport Api from 'api'\r\n\r\nconst getSelector = key => state => state.project[key];\r\n\r\nconst loadingSelector = getSelector('isLoading');\r\nconst listSelector = getSelector('list');\r\nconst paramsSelector = getSelector('listParams');\r\nconst getListFailedSelector = getSelector('getListFailed');\r\n\r\nconst itemSelector = getSelector('item');\r\nconst getItemFailedSelector = getSelector('getItemFailed');\r\n\r\nconst createSuccessSelector = getSelector('createSuccess');\r\nconst createFailedSelector = getSelector('createFailed');\r\n\r\nconst updateSuccessSelector = getSelector('updateSuccess');\r\nconst updateFailedSelector = getSelector('updateFailed');\r\n\r\nconst deleteSuccessSelector = getSelector('deleteSuccess');\r\nconst deleteFailedSelector = getSelector('deleteFailed');\r\n\r\nexport const useProjectsQueryParams = () => {\r\n  const query = useQueryParams();\r\n  const page = query.get('page') || 1;\r\n  const per_page = query.get('per_page') || 10;\r\n\r\n  return useMemo(() => {\r\n    return {\r\n      page,\r\n      per_page,\r\n      order_by_created_at: 'desc',\r\n    };\r\n    //eslint-disable-next-line\r\n  }, [page, per_page]);\r\n};\r\n\r\nexport const useProjects = (param) => {\r\n  return useFetchByParam({\r\n    action: getProjects,\r\n    loadingSelector,\r\n    dataSelector: listSelector,\r\n    failedSelector: getListFailedSelector,\r\n    param\r\n  });\r\n};\r\n\r\nexport const asyncProjects = (param) => {\r\n  return Api.project.getAll(param)\r\n    .then(res => Promise.resolve(res.data))\r\n};\r\n\r\nexport const useProjectsResParams = () => {\r\n  return useSelector(paramsSelector)\r\n};\r\n\r\nexport const useInitProject = (project) => {\r\n  return useMemo(() => {\r\n    return {\r\n      id: project?.id || null,\r\n      name: project?.name || '',\r\n      giturl: project?.giturl || '',\r\n      description: project?.description || '',\r\n    }\r\n  }, [project])\r\n}\r\n\r\nexport const useCreateProject = () => {\r\n  const navigate = useNavigate();\r\n  const [isLoading, handleSubmit] = useSubmit({\r\n    loadingSelector,\r\n    action: createProjectRequest\r\n  });\r\n\r\n  const successCallback = () => navigate(\"/project\");\r\n\r\n  useSuccess(createSuccessSelector, 'Create project success', successCallback);\r\n  useFailed(createFailedSelector, 'Create project Failed');\r\n\r\n  return [isLoading, handleSubmit];\r\n}\r\n\r\nexport const useUpdateProject = () => {\r\n  const navigate = useNavigate();\r\n  const [isLoading, handleSubmit] = useSubmit({\r\n    loadingSelector,\r\n    action: updateProjectRequest\r\n  });\r\n\r\n  const successCallback = () => navigate(\"/project\");\r\n\r\n  useSuccess(updateSuccessSelector, 'Update project success', successCallback);\r\n  useFailed(updateFailedSelector, 'Update project Failed');\r\n\r\n  return [isLoading, handleSubmit];\r\n}\r\n\r\nexport const useResetProject = () => {\r\n  useResetState(resetProjectState);\r\n};\r\n\r\nexport const useProjectDetail = (param) => {\r\n  return useFetchByParam({\r\n    action: getProjectDetailRequest,\r\n    loadingSelector,\r\n    dataSelector: itemSelector,\r\n    failedSelector: getItemFailedSelector,\r\n    param\r\n  });\r\n};\r\n\r\nexport const useDeleteProject = (params) => {\r\n  const dispatch = useDispatch();\r\n  const [isLoading, handleSubmit] = useSubmit({\r\n    loadingSelector,\r\n    action: deleteProjectRequest\r\n  });\r\n\r\n  const successCallback = () => {dispatch(getProjects(params))}\r\n\r\n  useSuccess(deleteSuccessSelector, 'Delete project success', successCallback);\r\n  useFailed(deleteFailedSelector, 'Delete project Failed');\r\n\r\n  return [isLoading, handleSubmit];\r\n}\r\n","import {\n  GET_RELEASES_REQUEST,\n  CREATE_RELEASE_REQUEST,\n  GET_RELEASE_DETAIL_REQUEST,\n  DELETE_RELEASE_REQUEST,\n\n  RESET_RELEASE,\n} from '../../constants/actionTypes';\n\nexport const getReleases = query => ({\n  type: GET_RELEASES_REQUEST,\n  payload: query\n});\n\nexport const createReleaseRequest = param => ({\n  type: CREATE_RELEASE_REQUEST,\n  payload: param\n});\n\nexport const resetReleaseState = () => ({\n  type: RESET_RELEASE,\n});\n\nexport const getReleaseDetail = param => ({\n  type: GET_RELEASE_DETAIL_REQUEST,\n  payload: param\n});\n\nexport const deleteReleaseRequest = (param) => ({\n  type: DELETE_RELEASE_REQUEST,\n  payload: param\n});\n","import { useMemo } from 'react';\r\nimport {\r\n  useFailed,\r\n  useFetchByParam,\r\n  useQueryParams,\r\n  useSubmit,\r\n  useSuccess,\r\n  useResetState\r\n} from '../utils';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  getReleases,\r\n  createReleaseRequest,\r\n  resetReleaseState,\r\n  getReleaseDetail,\r\n  deleteReleaseRequest,\r\n} from '../../redux/release/action';\r\n\r\nconst MAP_KEY = {\r\n  \"project_id\": \"project\",\r\n  \"platform\": \"platform\",\r\n  \"env_id\": \"environment\",\r\n  \"version\": \"version\",\r\n  \"title\": \"title\",\r\n  \"note\": \"note\",\r\n  \"apk\": \"apk\",\r\n  \"ipa\": \"ipa\",\r\n  \"bundle-identifier\": \"bundleIdentifier\",\r\n  \"bundle-version\": \"bundleVersion\",\r\n  \"bundle-title\": \"bundleTitle\",\r\n}\r\n\r\nconst getSelector = key => state => state.release[key];\r\n\r\nconst loadingSelector = getSelector('isLoading');\r\nconst listSelector = getSelector('list');\r\nconst paramsSelector = getSelector('listParams');\r\nconst getListFailedSelector = getSelector('getListFailed');\r\n\r\nconst itemSelector = getSelector('item');\r\nconst getItemFailedSelector = getSelector('getItemFailed');\r\n\r\nconst createSuccessSelector = getSelector('createSuccess');\r\nconst createFailedSelector = getSelector('createFailed');\r\n\r\nconst deleteSuccessSelector = getSelector('deleteSuccess');\r\nconst deleteFailedSelector = getSelector('deleteFailed');\r\n\r\nexport const useReleasesQueryParams = () => {\r\n  const query = useQueryParams();\r\n  const page = query.get('page') || 1;\r\n  const per_page = query.get('per_page') || 10;\r\n  const project_id = query.get('project_id');\r\n  const env_id = query.get('env_id');\r\n  const platform = query.get('platform');\r\n\r\n  return useMemo(() => {\r\n    return {\r\n      page,\r\n      per_page,\r\n      relation_project: true,\r\n      relation_env: true,\r\n      order_by_created_at: 'desc',\r\n      project_id: project_id || undefined,\r\n      env_id: env_id || undefined,\r\n      platform: platform || undefined,\r\n    };\r\n    //eslint-disable-next-line\r\n  }, [page, per_page, project_id, env_id, platform]);\r\n};\r\n\r\nexport const useReleases = param => {\r\n  return useFetchByParam({\r\n    action: getReleases,\r\n    loadingSelector,\r\n    dataSelector: listSelector,\r\n    failedSelector: getListFailedSelector,\r\n    param\r\n  });\r\n};\r\n\r\nexport const useReleasesResParams = () => {\r\n  return useSelector(paramsSelector)\r\n};\r\n\r\nexport const useInitRelease = () => {\r\n  return useMemo(() => {\r\n    return {\r\n      project: '',\r\n      platform: '',\r\n      environment: '',\r\n      version: '',\r\n      title: '',\r\n      note: '',\r\n      apk: null,\r\n      windows: null,\r\n      ipa: null,\r\n      bundleIdentifier: '', // 'com.enjoyworks.playmoongu.admin',\r\n      bundleVersion: '', // '1.1.1',\r\n      bundleTitle: '', // 'Playmoongu-Admin',\r\n    }\r\n  }, [])\r\n}\r\n\r\nexport const useCreateRelease = (form) => {\r\n  const navigate = useNavigate();\r\n  const [isLoading, handleSubmit] = useSubmit({\r\n    loadingSelector,\r\n    action: createReleaseRequest\r\n  });\r\n\r\n  const successCallback = () => navigate(\"/\");\r\n\r\n  const failCallback = (e) => {\r\n    if (e.errors) {\r\n      Object.keys(e.errors).map((name) => {\r\n        form.setError(MAP_KEY[name] || name, { message: e.errors[name][0] })\r\n      })\r\n    }\r\n  }\r\n\r\n  useSuccess(createSuccessSelector, 'Create release success', successCallback);\r\n  useFailed(createFailedSelector, 'Create release Failed', failCallback);\r\n\r\n  const _handleSubmit = (values) => {\r\n    let formData = new FormData();\r\n    const data = {\r\n      \"project_id\": values.project.value,\r\n      \"platform\": values.platform.value,\r\n      \"env_id\": values.environment.value,\r\n      \"version\": values.version,\r\n      \"title\": values.title,\r\n      \"note\": values.note,\r\n      \"apk\": values.apk ? values.apk[0] : null,\r\n      \"ipa\": values.ipa ? values.ipa[0] : null,\r\n      \"windows\": values.windows ? values.windows[0] : null,\r\n      \"bundle-identifier\": values.bundleIdentifier,\r\n      \"bundle-version\": values.bundleVersion,\r\n      \"bundle-title\": values.bundleTitle,\r\n    }\r\n    Object.keys(data).map((key) => {\r\n      formData.append(key, data[key])\r\n    })\r\n\r\n    return handleSubmit(formData)\r\n  }\r\n\r\n  return [isLoading, _handleSubmit];\r\n}\r\n\r\nexport const useResetRelease = () => {\r\n  useResetState(resetReleaseState);\r\n};\r\n\r\nexport const useReleaseDetail = (param) => {\r\n  return useFetchByParam({\r\n    action: getReleaseDetail,\r\n    loadingSelector,\r\n    dataSelector: itemSelector,\r\n    failedSelector: getItemFailedSelector,\r\n    param\r\n  });\r\n};\r\n\r\nexport const useDeleteRelease = (params) => {\r\n  const dispatch = useDispatch();\r\n  const [isLoading, handleSubmit] = useSubmit({\r\n    loadingSelector,\r\n    action: deleteReleaseRequest\r\n  });\r\n\r\n  const successCallback = () => {dispatch(getReleases(params))}\r\n\r\n  useSuccess(deleteSuccessSelector, 'Delete release success', successCallback);\r\n  useFailed(deleteFailedSelector, 'Delete release Failed');\r\n\r\n  return [isLoading, handleSubmit];\r\n}\r\n","import { useState, useEffect, Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {CopyToClipboard as Copy} from 'react-copy-to-clipboard';\r\nimport { Popover, PopoverBody } from 'reactstrap';\r\n\r\nconst CopyToClipboard = ({text, content, index, textCopied}) => {\r\n  const [copied, setCopied] = useState(false)\r\n  // const id = Math.floor(Math.random() * 100000)\r\n\r\n  useEffect(() => {\r\n    if (copied) {\r\n      setTimeout(() => {\r\n        setCopied(false)\r\n      }, 2000)\r\n    }\r\n  }, [copied])\r\n\r\n  const onCopy = () => {\r\n    setCopied(true)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Copy\r\n        text={content}\r\n        onCopy={onCopy}\r\n      >\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-sm btn-primary text-white mt-sm-0 mt-2 mx-sm-2 mx-0\"\r\n          disabled={copied}\r\n          id={`CopyToClipboard${index}`}\r\n        >\r\n          {text}\r\n        </button>\r\n      </Copy>\r\n      <Popover placement=\"bottom\" isOpen={copied} target={`CopyToClipboard${index}`}>\r\n        <PopoverBody>{textCopied}</PopoverBody>\r\n      </Popover>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default CopyToClipboard\r\n\r\nCopyToClipboard.defaultProps = {\r\n  textCopied: \"copied\"\r\n}\r\n\r\nCopyToClipboard.propTypes = {\r\n  text: PropTypes.string,\r\n  content: PropTypes.string,\r\n  index: PropTypes.number,\r\n  textCopied: PropTypes.string,\r\n}\r\n","import { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport Pagination from '../Pagination'\nimport CopyToClipboard from '../CopyToClipboard'\nimport { dateTimeFormat } from 'utils/datetime'\nimport ButtonDelete from \"../Form/ButtonDelete\"\n\nimport { useRole } from 'hooks/auth';\nconst RenderPlafForm  = (type) =>{\n  let classPlafForm = ''\n  switch(type) {\n    case 'android':\n      classPlafForm = 'platform-android fab fa-android text-success fa-3x';\n      break;\n    case 'ios':\n      classPlafForm = 'platform-apple fab fa-apple text-secondary fa-3x';\n      break;\n    default:\n      classPlafForm = 'platform-windows  fab fa-windows fa-3x';\n  }\n  return classPlafForm;\n}\n\nfunction ReleaseListDesktop ({releases, resParams, onPageChanged, onDelete}) {\n  const isAdmin = useRole('admin');\n  return (\n    <Fragment>\n      <div className=\"card main-body-table\">\n        <div className=\"card-body\">\n          <div className=\"table-responsive\">\n            <table className=\"table mb-0 table-hover align-middle text-nowrap\">\n              <thead>\n                <tr>\n                  <th className=\"border-top-0\"></th>\n                  <th className=\"border-top-0\">Updated at</th>\n                  <th className=\"border-top-0\">Project</th>\n                  <th className=\"border-top-0\">Environment</th>\n                  <th className=\"border-top-0\">Version</th>\n                  <th className=\"border-top-0\">Title</th>\n                  <th className=\"border-top-0\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                {releases.map((release, key) => (\n                  <tr key={release.id}>\n                    <td><i className={RenderPlafForm(release.platform)}></i></td>\n                    <td>{dateTimeFormat(release.updated_at)}</td>\n                    <td>{release.project_name}</td>\n                    <td className='white-space-norwrap '>\n                      <label className='m-0 pr-1'>{release.env_name}</label>\n                      <br />\n                      <small>{release.baseurl}</small>\n                    </td>\n                    <td>{release.version}</td>\n                    <td>{release.title}</td>\n                    <td className=\"text-end\">\n                      <Link\n                        className=\"btn btn-sm btn-primary text-white\"\n                        to={`/release/${release.id}/${release.project_name.split(' ').join('-')}-${release.platform}`}\n                      >\n                        Detail\n                      </Link>\n                      <CopyToClipboard\n                        text=\"Share\"\n                        content={`${window.location.origin}/release/${release.id}/${release.project_name.split(' ').join('-')}-${release.platform}`}\n                        index={key}\n                        textCopied=\"Copied share link to clipboard\"\n                      />\n                      {isAdmin ? <ButtonDelete onDelete={() => onDelete(release)} className=\"mx-0\" /> : null}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n          <nav className=\"pagination-content\">\n            {resParams.total ? <Pagination\n              totalRecords={+resParams.total}\n              pageLimit={+resParams.per_page}\n              pageNeighbours={2}\n              currentPage={+resParams.current_page}\n              onPageChanged={onPageChanged}\n              className=\"pt-0\"\n            /> : null}\n          </nav>\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default ReleaseListDesktop\n\nReleaseListDesktop.defaultProps = {}\n\nReleaseListDesktop.propTypes = {\n  releases: PropTypes.array,\n  resParams: PropTypes.object,\n  onPageChanged: PropTypes.func,\n  onDelete: PropTypes.func,\n}\n","import { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport CopyToClipboard from '../CopyToClipboard'\nimport { dateTimeFormat } from 'utils/datetime'\nimport ButtonDelete from \"../Form/ButtonDelete\"\n\nimport { useRole } from 'hooks/auth';\n\nconst RenderPlafForm  = (type) =>{\n  let classPlafForm = ''\n  switch(type) {\n    case 'android':\n      classPlafForm = 'platform-android fab fa-android text-success fa-3x';\n      break;\n    case 'ios':\n      classPlafForm = 'platform-apple fab fa-apple text-secondary fa-3x';\n      break;\n    default:\n      classPlafForm = 'platform-windows  fab fa-windows text-info fa-3x';\n  }\n  return classPlafForm;\n}\n\nfunction ReleaseListMobile ({releases, resParams, onPageChanged, onDelete}) {\n  const isAdmin = useRole('admin');\n\n  const fetchMoreData = () => {\n    onPageChanged(+resParams.current_page + 1)\n  }\n  const last_page = Math.ceil(resParams.total / +resParams.per_page)\n  return (\n    <Fragment>\n      <InfiniteScroll\n        dataLength={releases.length}\n        next={fetchMoreData}\n        hasMore={+resParams.current_page < last_page}\n        loader={null}\n      >\n        {releases.map((release, key) => (\n          <div className=\"card item-card-mobile\" key={release.id}>\n            <div className=\"card-body\">\n              <div className=\" content-row\">\n                <div className=\"item-card-mobile__icon\">\n                  <div className=\"white-box text-left\">\n                    <i className={RenderPlafForm(release.platform)}></i>\n                  </div>\n                </div>\n                <div className=\"item-card-mobile__info\">\n                  <p className='updated_at'>{dateTimeFormat(release.updated_at)}</p>\n                  <h4 className='name'>{release.project_name}</h4>\n                  <p className='title'>{release.title}</p>\n                  <p className='name-environment'>\n                    {release.env_name}\n                    <br />\n                    <small>{release.environment?.baseurl}</small>\n                  </p>\n                </div>\n                <div className=\"item-card-mobile__btn\">\n                  <Link\n                    className=\"btn btn-sm btn-primary text-white\"\n                    to={`/release/${release.id}/${release.project_name.split(' ').join('-')}-${release.platform}`}\n                  >\n                    Detail\n                  </Link>\n                  <CopyToClipboard\n                    text=\"Share\"\n                    content={`${window.location.origin}/release/${release.id}/${release.project_name.split(' ').join('-')}-${release.platform}`}\n                    index={key}\n                    textCopied=\"Copied share link to clipboard\"\n                  />\n                  {isAdmin ? <ButtonDelete onDelete={() => onDelete(release)} className=\"mt-2 mx-0\" /> : null}\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </InfiniteScroll>\n    </Fragment>\n  )\n}\n\nexport default ReleaseListMobile\n\nReleaseListMobile.defaultProps = {}\n\nReleaseListMobile.propTypes = {\n  releases: PropTypes.array,\n  resParams: PropTypes.object,\n  onPageChanged: PropTypes.func,\n  onDelete: PropTypes.func,\n}\n","import { Fragment, useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport queryString from 'query-string'\r\nimport Select from 'react-select'\r\n\r\nimport { useReleasesQueryParams, useReleases, useReleasesResParams, useDeleteRelease } from 'hooks/release';\r\nimport { useProjects } from 'hooks/project';\r\nimport { useEnvironments } from 'hooks/environment';\r\nimport { useToken } from 'hooks/auth';\r\nimport useBreakpoint from 'hooks/useBreakpoint';\r\n\r\nimport ReleaseListDesktop from 'components/Release/list.desktop'\r\nimport ReleaseListMobile from 'components/Release/list.mobile'\r\n\r\nconst optionsPlatform = [\r\n  { value: 'android', label: 'Android' },\r\n  { value: 'ios', label: 'IOS' },\r\n  { value: 'windows', label: 'Windows' },\r\n]\r\n\r\nfunction Home() {\r\n  const navigate = useNavigate();\r\n  const searchQuery = useReleasesQueryParams();\r\n  const [releases] = useReleases(searchQuery);\r\n  const [, handleDelete] = useDeleteRelease(searchQuery);\r\n  const resParams = useReleasesResParams();\r\n\r\n  const breakpoint = useBreakpoint();\r\n  const [, token] = useToken();\r\n\r\n  const [projectParams] = useState({per_page: 0})\r\n  const [projects] = useProjects(projectParams)\r\n\r\n  useEffect(() => {\r\n    if (window.innerWidth < 768) {\r\n      navigate(\r\n        {\r\n          pathname: '/',\r\n        },\r\n        { replace: true }\r\n      )\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const [environmentParams, setEnvironmentParams] = useState({\r\n    per_page: 0,\r\n    project_id: searchQuery.project_id || null\r\n  })\r\n  const [environments] = useEnvironments(searchQuery.project_id ? environmentParams : null);\r\n\r\n  const changeParams = (type, value) => {\r\n    const params = {...searchQuery}\r\n    params[type] = value\r\n    if (type !== 'page') {\r\n      params.page = 1\r\n    }\r\n    if (type === 'project_id') {\r\n      params.env_id = undefined\r\n      setEnvironmentParams(p => ({...p, project_id: value}))\r\n    }\r\n    navigate(\r\n      {\r\n        pathname: '/',\r\n        search: `?${queryString.stringify(params)}`,\r\n      },\r\n      { replace: true }\r\n    )\r\n  }\r\n\r\n  const onPageChanged = (page) => {\r\n    changeParams('page', page)\r\n  }\r\n\r\n  const onChangeFilter = (type, value) => {\r\n    changeParams(type, value?.value)\r\n  }\r\n\r\n  const optionsProject = projects.map(e => ({value: e.id, label: e.name}))\r\n  const optionEnvironments = searchQuery.project_id ? environments.map(e => ({value: e.id, label: e.name})) : []\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container-fluid home-container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card filter-content\">\r\n              <div className=\"card-body \">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-9 col-lg-7\">\r\n                    <form className=\"row gy-2 gx-2 align-items-center justify-content-xl-start justify-content-between\">\r\n                      <div className=\"col-sm-6 col-md-4 col-12\">\r\n                        <div className=\"d-flex align-items-center select2-common\">\r\n                          <label htmlFor=\"project_id\" className=\"visually-hidden\">project_id</label>\r\n                          <Select\r\n                            options={optionsProject}\r\n                            value={optionsProject.find(e => e.value == searchQuery.project_id)}\r\n                            onChange={(value) => onChangeFilter('project_id', value)}\r\n                            placeholder=\"Select Project\"\r\n                            isClearable\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-sm-6 col-md-4 col-12\">\r\n                        <div className=\"d-flex align-items-center select2-common\">\r\n                          <label htmlFor=\"env_id\" className=\"visually-hidden\">environment</label>\r\n                          <Select\r\n                            options={optionEnvironments}\r\n                            value={optionEnvironments.find(e => e.value == searchQuery.env_id) || null}\r\n                            onChange={(value) => onChangeFilter('env_id', value)}\r\n                            placeholder=\"Select Environment\"\r\n                            isClearable\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-sm-6 col-md-4 col-12\">\r\n                        <div className=\"d-flex align-items-center select2-common\">\r\n                          <label htmlFor=\"platform\" className=\"visually-hidden\">platform</label>\r\n                          <Select\r\n                            options={optionsPlatform}\r\n                            value={optionsPlatform.find(e => e.value == searchQuery.platform)}\r\n                            onChange={(value) => onChangeFilter('platform', value)}\r\n                            placeholder=\"Select Platform\"\r\n                            isClearable\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                  {token ? <div className=\"col-md-3 col-lg-5\">\r\n                    <div className=\"text-md-end mt-md-0 mt-2\">\r\n                      <Link to={'/upload'} className=\"btn btn-primary mb-2 me-2 text-white\">\r\n                        <i className=\"mdi mdi-upload me-1\"></i> Upload\r\n                      </Link>\r\n                    </div>\r\n                  </div> : null}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {breakpoint.width >= 768 ? (\r\n              <ReleaseListDesktop\r\n                releases={releases}\r\n                resParams={resParams}\r\n                onPageChanged={onPageChanged}\r\n                onDelete={handleDelete}\r\n              />\r\n            ) : (\r\n              <ReleaseListMobile\r\n                releases={releases}\r\n                resParams={resParams}\r\n                onPageChanged={onPageChanged}\r\n                onDelete={handleDelete}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import moment from 'moment'\n\nexport const dateTimeFormat = datetime => {\n  if (!datetime) {\n    return ''\n  }\n  \n  return moment(datetime).format('Y-MM-DD HH:mm:ss')\n}\n"],"names":["DeleteModal","isModalOpen","toggleModal","onDelete","isOpen","toggle","className","color","onClick","defaultProps","Button","useReducer","p","type","LEFT_PAGE","LEFT_PAGE_DISABLE","RIGHT_PAGE","RIGHT_PAGE_DISABLE","FIRST_PAGE","FIRST_PAGE_DISABLE","LAST_PAGE","LAST_PAGE_DISABLE","range","from","to","step","i","push","Pagination","props","totalRecords","pageLimit","pageNeighbours","onPageChanged","currentPage","useState","totalPages","setTotalPages","useEffect","Math","ceil","clickPageChanged","e","page","preventDefault","pages","totalNumbers","startPage","max","endPage","min","hasLeftSpill","hasRightSpill","spillOffset","length","btnLeft","btnRight","btnFirst","btnLast","extraPages","fetchPageNumbers","map","index","href","getEnvironments","query","GET_ENVIRONMENTS_REQUEST","payload","createEnvironmentRequest","param","CREATE_ENVIRONMENT_REQUEST","resetEnvironmentState","RESET_ENVIRONMENT","getEnvironmentDetailRequest","GET_ENVIRONMENT_DETAIL_REQUEST","updateEnvironmentRequest","UPDATE_ENVIRONMENT_REQUEST","deleteEnviromentRequest","DELETE_ENVIRONMENT_REQUEST","getSelector","key","state","environment","loadingSelector","listSelector","paramsSelector","getListFailedSelector","itemSelector","getItemFailedSelector","createSuccessSelector","createFailedSelector","updateSuccessSelector","updateFailedSelector","deleteSuccessSelector","deleteFailedSelector","useEnvironmentsQueryParams","useQueryParams","get","per_page","project_id","useMemo","order_by_created_at","undefined","useEnvironments","useFetchByParam","action","dataSelector","failedSelector","useEnvironmentsResParams","useSelector","useInitEnvironment","projects","find","id","value","label","name","baseurl","description","useCreateEnvironment","navigate","useNavigate","useSubmit","isLoading","handleSubmit","useSuccess","useFailed","values","data","useUpdateEnvironment","useResetEnvironment","useResetState","useEnvironmentDetail","useDeleteEnvironment","params","dispatch","useDispatch","getProjects","GET_PROJECTS_REQUEST","createProjectRequest","CREATE_PROJECT_REQUEST","resetProjectState","RESET_PROJECT","getProjectDetailRequest","GET_PROJECT_DETAIL_REQUEST","updateProjectRequest","UPDATE_PROJECT_REQUEST","deleteProjectRequest","DELETE_PROJECT_REQUEST","project","useProjectsQueryParams","useProjects","useProjectsResParams","useInitProject","giturl","useCreateProject","useUpdateProject","useResetProject","useProjectDetail","useDeleteProject","getReleases","GET_RELEASES_REQUEST","createReleaseRequest","CREATE_RELEASE_REQUEST","resetReleaseState","RESET_RELEASE","getReleaseDetail","GET_RELEASE_DETAIL_REQUEST","deleteReleaseRequest","DELETE_RELEASE_REQUEST","MAP_KEY","release","useReleasesQueryParams","env_id","platform","relation_project","relation_env","useReleases","useReleasesResParams","useInitRelease","version","title","note","apk","windows","ipa","bundleIdentifier","bundleVersion","bundleTitle","useCreateRelease","form","errors","Object","keys","setError","message","formData","FormData","append","useResetRelease","useReleaseDetail","useDeleteRelease","CopyToClipboard","text","content","textCopied","copied","setCopied","setTimeout","Fragment","onCopy","disabled","placement","target","RenderPlafForm","classPlafForm","ReleaseListDesktop","releases","resParams","isAdmin","useRole","dateTimeFormat","updated_at","project_name","env_name","split","join","window","location","origin","ButtonDelete","total","current_page","ReleaseListMobile","last_page","dataLength","next","hasMore","loader","optionsPlatform","searchQuery","handleDelete","breakpoint","useBreakpoint","useToken","token","projectParams","innerWidth","pathname","replace","environmentParams","setEnvironmentParams","environments","changeParams","search","queryString","onChangeFilter","optionsProject","optionEnvironments","htmlFor","options","onChange","placeholder","isClearable","width","datetime","moment","format"],"sourceRoot":""}