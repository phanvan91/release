{"version":3,"file":"static/js/709.5c421b06.chunk.js","mappings":"4KAIMA,EAAa,SAAC,GAAD,IACjBC,EADiB,EACjBA,WACAC,EAFiB,EAEjBA,MACAC,EAHiB,EAGjBA,WACAC,EAJiB,EAIjBA,aACAC,EALiB,EAKjBA,WALiB,OAOjB,gBAAKC,UAAU,kBAAf,UACE,iBAAKA,UAAU,yBAAf,WACE,iBAAKA,UAAU,QAAf,WACE,gBAAK,aAAW,aAAhB,UACE,eAAIA,UAAU,4CAAd,SACGL,EAAWM,KAAI,SAACC,EAAGC,GAAJ,OACd,UAAC,EAAAC,SAAD,WACGF,EAAEG,MACD,eAAIL,UAAU,kBAAd,UACE,UAAC,KAAD,CAAMM,GAAIJ,EAAEG,IAAKL,UAAU,OAA3B,UACGE,EAAEK,OAAQ,cAAGP,UAAWE,EAAEK,OAC1BL,EAAEK,MAAQ,IACVL,EAAEM,WAIPN,EAAEG,MAAO,eAAIL,UAAU,yBAAd,SAAwCE,EAAEM,SAVxCL,EADD,QAgBnBP,GAAQ,eAAII,UAAU,eAAd,SAA8BJ,IAAc,SAEvD,gBAAKI,UAAU,QAAf,SACGH,GACC,gBAAKG,UAAU,uBAAf,UACE,SAAC,KAAD,CAAMM,GAAIR,EAAcE,UAAU,6BAAlC,SACGD,MAGH,WArCO,EA2CnB,IAEAL,EAAWe,aAAe,CACxBd,WAAY,GACZC,MAAO,GACPC,YAAY,E,iGCjDd,SAASa,EAAT,GAA6D,IAAtCC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,SAC/C,OACE,0BACE,UAAC,KAAD,CAAOC,OAAQH,EAAaI,OAAQH,EAApC,WACE,SAAC,KAAD,KACA,UAAC,KAAD,CAAWZ,UAAU,cAArB,WACE,2CACA,iEAEF,UAAC,KAAD,YACE,SAAC,KAAD,CAAQgB,MAAM,oBAAoBC,QAASJ,EAA3C,oBAAqE,KACrE,SAAC,KAAD,CAAQG,MAAM,YAAYC,QAASL,EAAnC,2BAKT,CAED,QAEAF,EAAYD,aAAe,CACzBE,aAAa,EACbC,YAAa,WAAQ,EACrBC,SAAU,WAAQ,GCtBpB,IAAMK,EAAS,SAAC,GAA2B,IAA1BL,EAAyB,EAAzBA,SAAUb,EAAe,EAAfA,UACzB,GAAmCmB,EAAAA,EAAAA,aAAW,SAAAC,GAAC,OAAKA,CAAL,IAAQ,GAAvD,eAAOT,EAAP,KAAoBC,EAApB,KACA,OACE,iCACE,mBACES,KAAK,SACLrB,UAAW,oCAAsCA,EAAa,IAAMA,EAAa,SACjFiB,QAASL,EAHX,qBAOA,SAAC,EAAD,CACED,YAAaA,EACbC,YAAaA,EACbC,SAAU,WAAOA,IAAYD,GAAc,MAIlD,EAED,IAEAM,EAAOT,aAAe,CACpBI,SAAU,WAAQ,E,iGCxBdS,EAAY,OACZC,EAAoB,eACpBC,EAAa,QACbC,EAAqB,gBAErBC,EAAa,QACbC,EAAqB,gBACrBC,EAAY,OACZC,EAAoB,eAEpBC,EAAQ,SAACC,EAAMzB,GAInB,IAJqC,IAAd0B,EAAa,uDAAN,EAC1BC,EAAIF,EACFD,EAAQ,GAEPG,GAAK3B,GACVwB,EAAMI,KAAKD,GACXA,GAAKD,EAGP,OAAOF,CACR,EAEKK,EAAa,SAAAC,GACjB,IACEC,EAMED,EANFC,aACAC,EAKEF,EALFE,UACAC,EAIEH,EAJFG,eACAC,EAGEJ,EAHFI,cACAC,EAEEL,EAFFK,YACAzC,EACEoC,EADFpC,UAEF,GAAoC0C,EAAAA,EAAAA,UAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,MACAC,EAAAA,EAAAA,YAAU,WACRD,EAAcE,KAAKC,KAAKV,EAAeC,GAExC,GAAE,CAACG,EAAaJ,IAEjB,IAuCMW,EAAmB,SAACC,EAAGC,GAC3BD,EAAEE,iBACED,EAAO,GAAKA,EAAOP,GAAcO,IAAST,GAG9CD,EAAcU,EACf,EAEKE,EA/CmB,WACvB,IAAMC,EAAed,EAIfe,EAAYR,KAAKS,IAAI,EAAGd,EAAcF,GACtCiB,EAAUV,KAAKW,IAAId,EAAYF,EAAcF,GAE/Ca,EAAQtB,EAAMwB,EAAWE,GAEvBE,EAAeJ,EAAY,EAC3BK,EAAgBhB,EAAaa,EAAU,EACvCI,EAAcP,GAAgBD,EAAMS,OAAS,GAE7CC,EAAUrB,EAAc,EAAInB,EAAYC,EACxCwC,EAAWtB,EAAcE,EAAanB,EAAaC,EAEnDuC,EAAWvB,EAAc,EAAIf,EAAaC,EAC1CsC,EAAUxB,EAAcE,EAAaf,EAAYC,EAEvD,IAAQ,KAED6B,IAAiBC,GAAtB,CACE,IAAMO,EAAapC,EAAMwB,EAAYM,EAAaN,EAAY,GAC9DF,EAAK,CAAIY,EAAUF,GAAd,eAA0BI,IAA1B,OAAyCd,GAAzC,CAAgDW,EAAUE,GAEhE,MAICb,EAAK,CAAIY,EAAUF,GAAd,eAA0BV,GAA1B,CAAiCW,EAAUE,IAIpD,OAAO,OAAIb,EAGZ,CAUae,IAAsB,GAEpC,OACE,eAAInE,UAAS,iEAA4DA,GAAa,SAAtF,SACGoD,EAAMnD,KAAI,SAACiD,EAAMkB,GAChB,OAAIlB,IAAS5B,GAAa4B,IAAS3B,GAE/B,eAAgBvB,UAAS,8BAAyBkD,IAAS3B,EAAoB,YAAc,IAA7F,UACE,cACE8C,KAAK,IACLrE,UAAU,YACV,aAAW,WACXiB,QAAS,SAAAgC,GAAC,OAAID,EAAiBC,EAAGR,EAAc,EAAtC,EAJZ,mBADO2B,GAeTlB,IAAS1B,GAAc0B,IAASzB,GAEhC,eAAgBzB,UAAS,8BAAyBkD,IAASzB,EAAqB,YAAc,IAA9F,UACE,cACE4C,KAAK,IACLrE,UAAU,YACV,aAAW,OACXiB,QAAS,SAAAgC,GAAC,OAAID,EAAiBC,EAAGR,EAAc,EAAtC,EAJZ,mBADO2B,GAcTlB,IAASxB,GAAcwB,IAASvB,GAEhC,eAAgB3B,UAAS,8BAAyBkD,IAASvB,EAAqB,YAAc,IAA9F,UACE,cACE0C,KAAK,IACLrE,UAAU,YACV,aAAW,WACXiB,QAAS,SAAAgC,GAAC,OAAID,EAAiBC,EAAG,EAAxB,EAJZ,oBADOmB,GAeTlB,IAAStB,GAAasB,IAASrB,GAE/B,eAAgB7B,UAAS,8BAAyBkD,IAASrB,EAAoB,YAAc,IAA7F,UACE,cACEwC,KAAK,IACLrE,UAAU,YACV,aAAW,OACXiB,QAAS,SAAAgC,GAAC,OAAID,EAAiBC,EAAGN,EAAxB,EAJZ,mBADOyB,IAgBX,eAEEpE,UAAS,8BACPyC,IAAgBS,EAAO,UAAY,IAHvC,UAME,cACEmB,KAAK,IACLrE,UAAU,YACViB,QAAS,SAAAgC,GAAC,OAAID,EAAiBC,EAAGC,EAAxB,EAHZ,SAKGA,KAVEkB,EAcV,KAGN,EAED,IAEAjC,EAAW1B,aAAe,CACxB4B,aAAc,EACdC,UAAW,EACXC,eAAgB,EAChBC,cAAe,WAAQ,EACvBC,YAAY,E,sTClLD6B,EAAc,SAAAC,GAAK,MAAK,CACnClD,KAAMmD,EAAAA,GACNC,QAASF,EAFqB,EAKnBG,EAAuB,SAAAC,GAAK,MAAK,CAC5CtD,KAAMuD,EAAAA,GACNH,QAASE,EAF8B,EAK5BE,EAAoB,iBAAO,CACtCxD,KAAMyD,EAAAA,GADyB,EAIpBC,EAA0B,SAACJ,GAAD,MAAY,CACjDtD,KAAM2D,EAAAA,GACNP,QAASE,EAF4B,EAK1BM,EAAuB,SAACN,GAAD,MAAY,CAC9CtD,KAAM6D,EAAAA,GACNT,QAASE,EAFyB,EAKvBQ,EAAuB,SAACR,GAAD,MAAY,CAC9CtD,KAAM+D,EAAAA,GACNX,QAASE,EAFyB,ECZ9BU,G,QAAc,SAAAlF,GAAG,OAAI,SAAAmF,GAAK,OAAIA,EAAMC,QAAQpF,EAAlB,CAAT,GAEjBqF,EAAkBH,EAAY,aAC9BI,EAAeJ,EAAY,QAC3BK,EAAiBL,EAAY,cAC7BM,EAAwBN,EAAY,iBAEpCO,EAAeP,EAAY,QAC3BQ,EAAwBR,EAAY,iBAEpCS,EAAwBT,EAAY,iBACpCU,EAAuBV,EAAY,gBAEnCW,EAAwBX,EAAY,iBACpCY,EAAuBZ,EAAY,gBAEnCa,EAAwBb,EAAY,iBACpCc,EAAuBd,EAAY,gBAE5Be,EAAyB,WACpC,IAAM7B,GAAQ8B,EAAAA,EAAAA,MACRnD,EAAOqB,EAAM+B,IAAI,SAAW,EAC5BC,EAAWhC,EAAM+B,IAAI,aAAe,GAE1C,OAAOE,EAAAA,EAAAA,UAAQ,WACb,MAAO,CACLtD,KAAAA,EACAqD,SAAAA,EACAE,oBAAqB,OAGxB,GAAE,CAACvD,EAAMqD,GACX,EAEYG,EAAc,SAAC/B,GAC1B,OAAOgC,EAAAA,EAAAA,IAAgB,CACrBC,OAAQtC,EACRkB,gBAAAA,EACAqB,aAAcpB,EACdqB,eAAgBnB,EAChBhB,MAAAA,GAEH,EAOYoC,EAAuB,WAClC,OAAOC,EAAAA,EAAAA,IAAYtB,EACpB,EAEYuB,EAAiB,SAAC1B,GAC7B,OAAOiB,EAAAA,EAAAA,UAAQ,WACb,MAAO,CACLU,IAAW,OAAP3B,QAAO,IAAPA,OAAA,EAAAA,EAAS2B,KAAM,KACnB1G,MAAa,OAAP+E,QAAO,IAAPA,OAAA,EAAAA,EAAS/E,OAAQ,GACvB2G,QAAe,OAAP5B,QAAO,IAAPA,OAAA,EAAAA,EAAS4B,SAAU,GAC3BC,aAAoB,OAAP7B,QAAO,IAAPA,OAAA,EAAAA,EAAS6B,cAAe,GAExC,GAAE,CAAC7B,GACL,EAEY8B,EAAmB,WAC9B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,IAAU,CAC1ChC,gBAAAA,EACAoB,OAAQlC,IAFV,eAAO+C,EAAP,KAAkBC,EAAlB,KAUA,OAHAC,EAAAA,EAAAA,IAAW7B,EAAuB,0BAFV,kBAAMwB,EAAS,WAAf,KAGxBM,EAAAA,EAAAA,IAAU7B,EAAsB,yBAEzB,CAAC0B,EAAWC,EACpB,EAEYG,EAAmB,WAC9B,IAAMP,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,IAAU,CAC1ChC,gBAAAA,EACAoB,OAAQ3B,IAFV,eAAOwC,EAAP,KAAkBC,EAAlB,KAUA,OAHAC,EAAAA,EAAAA,IAAW3B,EAAuB,0BAFV,kBAAMsB,EAAS,WAAf,KAGxBM,EAAAA,EAAAA,IAAU3B,EAAsB,yBAEzB,CAACwB,EAAWC,EACpB,EAEYI,EAAkB,YAC7BC,EAAAA,EAAAA,IAAclD,EACf,EAEYmD,EAAmB,SAACrD,GAC/B,OAAOgC,EAAAA,EAAAA,IAAgB,CACrBC,OAAQ7B,EACRS,gBAAAA,EACAqB,aAAcjB,EACdkB,eAAgBjB,EAChBlB,MAAAA,GAEH,EAEYsD,EAAmB,SAACC,GAC/B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCZ,EAAAA,EAAAA,IAAU,CAC1ChC,gBAAAA,EACAoB,OAAQzB,IAFV,eAAOsC,EAAP,KAAkBC,EAAlB,KAUA,OAHAC,EAAAA,EAAAA,IAAWzB,EAAuB,0BAFV,WAAOiC,EAAS7D,EAAY4D,GAAS,KAG7DN,EAAAA,EAAAA,IAAUzB,EAAsB,yBAEzB,CAACsB,EAAWC,EACpB,C,8IChIK/H,EAAa,CACjB,CAACa,KAAM,GAAIH,IAAK,IAAKE,KAAM,6BAC3B,CAACC,KAAM,eAAgBH,IAAK,KAAME,KAAM,OA6F1C,UA1FA,WACE,IAAM+G,GAAWC,EAAAA,EAAAA,MACXc,GAAcjC,EAAAA,EAAAA,MACpB,GAAmBM,EAAAA,EAAAA,IAAY2B,GAAxBC,GAAP,eACMC,GAAYxB,EAAAA,EAAAA,KAClB,GAAyBkB,EAAAA,EAAAA,IAAiBI,GAAjCG,GAAT,eAyBA,OACE,UAAC,EAAApI,SAAD,YACE,SAAC,IAAD,CACET,WAAYA,EACZC,MAAM,eACNC,YAAU,EACVE,WAAY,iBACZD,aAAc,qBAEhB,gBAAKE,UAAU,kBAAf,UACE,gBAAKA,UAAU,MAAf,UACE,gBAAKA,UAAU,SAAf,UACE,gBAAKA,UAAU,uBAAf,UACE,iBAAKA,UAAU,YAAf,WACE,gBAAKA,UAAU,mBAAf,UACE,mBAAOA,UAAU,kDAAjB,WACE,4BACE,2BACE,eAAIA,UAAU,eAAd,mBACA,eAAIA,UAAU,eAAd,sBACA,eAAIA,UAAU,eAAd,0BACA,eAAIA,UAAU,uBAGlB,2BACGsI,EAASrI,KAAI,SAACsF,GAAD,OACZ,2BACE,wBAAKA,EAAQ/E,QACb,wBAAK+E,EAAQ4B,UACb,wBAAK5B,EAAQ6B,eACb,gBAAIpH,UAAU,WAAd,WACE,SAAC,KAAD,CAAMA,UAAU,oCAAoCM,GAAE,mBAAciF,EAAQ2B,GAAtB,SAAtD,mBAGA,SAAC,IAAD,CAAcrG,SAAU,kBAtC5B,SAAC0E,GACrBiD,EAAa,CAACtB,GAAI3B,EAAQ2B,IAC3B,CAoCuDuB,CAAclD,EAApB,SARnBA,EAAQ2B,GADL,YAgBpB,gBAAKlH,UAAU,qBAAf,SACGuI,EAAUG,OAAQ,SAAC,IAAD,CACjBrG,cAAekG,EAAUG,MACzBpG,WAAYiG,EAAUhC,SACtBhE,eAAgB,EAChBE,aAAc8F,EAAUI,aACxBnG,cAvDI,SAACU,IAfF,SAAC7B,EAAMuH,GAC1B,IAAMV,GAAM,UAAOG,GACnBH,EAAO7G,GAAQuH,EACF,SAATvH,IACF6G,EAAOhF,KAAO,GAEhBoE,EACE,CACEuB,SAAU,WACVC,OAAO,IAAD,OAAMC,EAAAA,UAAsBb,KAEpC,CAAEc,SAAS,GAEd,CAGCC,CAAa,OAAQ/F,EACtB,EAsDiBlD,UAAU,SACP,oBAStB,C","sources":["components/Breadcrumb/Breadcrumb.js","components/Modal/DeleteModal.js","components/Form/ButtonDelete.js","components/Pagination/Pagination.js","redux/project/action.js","hooks/project/index.js","pages/Project/index.js"],"sourcesContent":["import { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nconst Breadcrumb = ({\n  breadcrumb,\n  title,\n  showButton,\n  buttonAction,\n  buttonText,\n}) => (\n  <div className=\"page-breadcrumb\">\n    <div className=\"row align-items-center\">\n      <div className=\"col-6\">\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb mb-0 d-flex align-items-center\">\n            {breadcrumb.map((b, key) => (\n              <Fragment key={key}>\n                {b.url && (\n                  <li className=\"breadcrumb-item\">\n                    <Link to={b.url} className=\"link\">\n                      {b.icon && <i className={b.icon}></i>}\n                      {b.icon && ' '}\n                      {b.name}\n                    </Link>\n                  </li>\n                )}\n                {!b.url && <li className=\"breadcrumb-item active\">{b.name}</li>}\n              </Fragment>\n            ))}\n          </ol>\n        </nav>\n        {title ? <h1 className=\"mb-0 fw-bold\">{title}</h1> : null}\n      </div>\n      <div className=\"col-6\">\n        {showButton ? (\n          <div className=\"text-end upgrade-btn\">\n            <Link to={buttonAction} className=\"btn btn-primary text-white\">\n              {buttonText}\n            </Link>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  </div>\n)\n\nexport default Breadcrumb\n\nBreadcrumb.defaultProps = {\n  breadcrumb: [],\n  title: '',\n  showButton: false,\n}\n\nBreadcrumb.propTypes = {\n  title: PropTypes.string,\n  breadcrumb: PropTypes.array,\n  className: PropTypes.string,\n  showButton: PropTypes.bool,\n  buttonAction: PropTypes.func,\n  buttonText: PropTypes.string,\n}\n","import { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport PropTypes from 'prop-types'\n\nfunction DeleteModal ({isModalOpen, toggleModal, onDelete}) {\n  return (\n    <div>\n      <Modal isOpen={isModalOpen} toggle={toggleModal}>\n        <ModalHeader></ModalHeader>\n        <ModalBody className=\"text-center\">\n          <h3>Are you sure?</h3>\n          <p>You won&#39;t be able to revert this!</p>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"danger text-white\" onClick={onDelete}>Delete</Button>{' '}\n          <Button color=\"secondary\" onClick={toggleModal}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  )\n}\n\nexport default DeleteModal\n\nDeleteModal.defaultProps = {\n  isModalOpen: false,\n  toggleModal: () => {},\n  onDelete: () => {}\n}\n\nDeleteModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  toggleModal: PropTypes.func,\n  onDelete: PropTypes.func,\n}\n","import { useReducer } from 'react';\nimport PropTypes from 'prop-types'\nimport DeleteModal from \"components/Modal/DeleteModal\"\n\nconst Button = ({onDelete, className}) => {\n  const [isModalOpen, toggleModal] = useReducer(p => !p, false);\n  return (\n    <>\n      <button\n        type=\"button\"\n        className={\"btn btn-sm btn-danger text-white\" + (className ? (' ' + className) : ' mx-2')}\n        onClick={toggleModal}\n      >\n        Delete\n      </button>\n      <DeleteModal\n        isModalOpen={isModalOpen}\n        toggleModal={toggleModal}\n        onDelete={() => {onDelete(); toggleModal()}}\n      />\n    </>\n  );\n}\n\nexport default Button\n\nButton.defaultProps = {\n  onDelete: () => {}\n}\n\nButton.propTypes = {\n  onDelete: PropTypes.func,\n  className: PropTypes.string,\n}\n","import { useState, useEffect } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst LEFT_PAGE = \"LEFT\";\r\nconst LEFT_PAGE_DISABLE = \"LEFT_DISABLE\";\r\nconst RIGHT_PAGE = \"RIGHT\";\r\nconst RIGHT_PAGE_DISABLE = \"RIGHT_DISABLE\";\r\n\r\nconst FIRST_PAGE = \"FIRST\";\r\nconst FIRST_PAGE_DISABLE = \"FIRST_DISABLE\";\r\nconst LAST_PAGE = \"LAST\";\r\nconst LAST_PAGE_DISABLE = \"LAST_DISABLE\";\r\n\r\nconst range = (from, to, step = 1) => {\r\n  let i = from;\r\n  const range = [];\r\n\r\n  while (i <= to) {\r\n    range.push(i);\r\n    i += step;\r\n  }\r\n\r\n  return range;\r\n};\r\n\r\nconst Pagination = props => {\r\n  const {\r\n    totalRecords,\r\n    pageLimit,\r\n    pageNeighbours,\r\n    onPageChanged,\r\n    currentPage,\r\n    className\r\n  } = props;\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  useEffect(() => {\r\n    setTotalPages(Math.ceil(totalRecords / pageLimit));\r\n    // eslint-disable-next-line\r\n  }, [currentPage, totalRecords]);\r\n\r\n  const fetchPageNumbers = () => {\r\n    const totalNumbers = pageNeighbours //  * 2 + 3;\r\n    // const totalBlocks = totalNumbers + 2;\r\n\r\n    // if (totalPages > totalBlocks) {\r\n    const startPage = Math.max(1, currentPage - pageNeighbours);\r\n    const endPage = Math.min(totalPages, currentPage + pageNeighbours);\r\n\r\n    let pages = range(startPage, endPage);\r\n\r\n    const hasLeftSpill = startPage > 2;\r\n    const hasRightSpill = totalPages - endPage > 1;\r\n    const spillOffset = totalNumbers - (pages.length + 1);\r\n\r\n    const btnLeft = currentPage > 1 ? LEFT_PAGE : LEFT_PAGE_DISABLE\r\n    const btnRight = currentPage < totalPages ? RIGHT_PAGE : RIGHT_PAGE_DISABLE\r\n\r\n    const btnFirst = currentPage > 1 ? FIRST_PAGE : FIRST_PAGE_DISABLE\r\n    const btnLast = currentPage < totalPages ? LAST_PAGE : LAST_PAGE_DISABLE\r\n\r\n    switch (true) {\r\n      // handle: (1) < {5 6} [7] {8 9} (10)\r\n      case hasLeftSpill && !hasRightSpill: {\r\n        const extraPages = range(startPage - spillOffset, startPage - 1);\r\n        pages = [btnFirst, btnLeft, ...extraPages, ...pages, btnRight, btnLast];\r\n        break;\r\n      }\r\n      // handle: (1) < {4 5} [6] {7 8} > (10)\r\n      case hasLeftSpill && hasRightSpill:\r\n      default: {\r\n        pages = [btnFirst, btnLeft, ...pages, btnRight, btnLast];\r\n        break;\r\n      }\r\n    }\r\n    return [...pages];\r\n    // }\r\n    // return [FIRST_PAGE_DISABLE, LEFT_PAGE_DISABLE, ...(range(1, totalPages)), RIGHT_PAGE_DISABLE, LAST_PAGE_DISABLE];\r\n  };\r\n\r\n  const clickPageChanged = (e, page) => {\r\n    e.preventDefault()\r\n    if (page < 1 || page > totalPages || page === currentPage) {\r\n      return\r\n    }\r\n    onPageChanged(page)\r\n  }\r\n\r\n  const pages = fetchPageNumbers() || [];\r\n\r\n  return (\r\n    <ul className={`pagination pagination-style-one justify-content-center ${className || 'pt-50'}`}>\r\n      {pages.map((page, index) => {\r\n        if (page === LEFT_PAGE || page === LEFT_PAGE_DISABLE)\r\n          return (\r\n            <li key={index} className={`page-item page-arrow${page === LEFT_PAGE_DISABLE ? ' disabled' : ''}`}>\r\n              <a\r\n                href=\"#\"\r\n                className=\"page-link\"\r\n                aria-label=\"Previous\"\r\n                onClick={e => clickPageChanged(e, currentPage - 1)}\r\n              >\r\n                prev\r\n                {/*<i className=\"m-r-10 mdi mdi-chevron-left\"></i>*/}\r\n                {/*<span aria-hidden=\"true\">&laquo;</span>*/}\r\n                {/*<span className=\"sr-only\">Previous</span>*/}\r\n              </a>\r\n            </li>\r\n          );\r\n\r\n        if (page === RIGHT_PAGE || page === RIGHT_PAGE_DISABLE)\r\n          return (\r\n            <li key={index} className={`page-item page-arrow${page === RIGHT_PAGE_DISABLE ? ' disabled' : ''}`}>\r\n              <a\r\n                href=\"#\"\r\n                className=\"page-link\"\r\n                aria-label=\"Next\"\r\n                onClick={e => clickPageChanged(e, currentPage + 1)}\r\n              >\r\n                next\r\n                {/*<i className=\"m-r-10 mdi mdi-chevron-right\"></i>*/}\r\n                {/*<span aria-hidden=\"true\">&raquo;</span>*/}\r\n                {/*<span className=\"sr-only\">Next</span>*/}\r\n              </a>\r\n            </li>\r\n          );\r\n        if (page === FIRST_PAGE || page === FIRST_PAGE_DISABLE)\r\n          return (\r\n            <li key={index} className={`page-item page-arrow${page === FIRST_PAGE_DISABLE ? ' disabled' : ''}`}>\r\n              <a\r\n                href=\"#\"\r\n                className=\"page-link\"\r\n                aria-label=\"Previous\"\r\n                onClick={e => clickPageChanged(e, 1)}\r\n              >\r\n                first\r\n                {/*<i className=\"m-r-10 mdi mdi-chevron-left\"></i>*/}\r\n                {/*<span aria-hidden=\"true\">&laquo;</span>*/}\r\n                {/*<span className=\"sr-only\">Previous</span>*/}\r\n              </a>\r\n            </li>\r\n          );\r\n\r\n        if (page === LAST_PAGE || page === LAST_PAGE_DISABLE)\r\n          return (\r\n            <li key={index} className={`page-item page-arrow${page === LAST_PAGE_DISABLE ? ' disabled' : ''}`}>\r\n              <a\r\n                href=\"#\"\r\n                className=\"page-link\"\r\n                aria-label=\"Next\"\r\n                onClick={e => clickPageChanged(e, totalPages)}\r\n              >\r\n                last\r\n                {/*<i className=\"m-r-10 mdi mdi-chevron-right\"></i>*/}\r\n                {/*<span aria-hidden=\"true\">&raquo;</span>*/}\r\n                {/*<span className=\"sr-only\">Next</span>*/}\r\n              </a>\r\n            </li>\r\n          );\r\n\r\n        return (\r\n          <li\r\n            key={index}\r\n            className={`page-item page-arrow${\r\n              currentPage === page ? \" active\" : \"\"\r\n            }`}\r\n          >\r\n            <a\r\n              href=\"#\"\r\n              className=\"page-link\"\r\n              onClick={e => clickPageChanged(e, page)}\r\n            >\r\n              {page}\r\n            </a>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n\r\nPagination.defaultProps = {\r\n  totalRecords: 0,\r\n  pageLimit: 0,\r\n  pageNeighbours: 0,\r\n  onPageChanged: () => {},\r\n  currentPage:0,\r\n}\r\n\r\nPagination.propTypes = {\r\n  totalRecords: PropTypes.number,\r\n  pageLimit: PropTypes.number,\r\n  pageNeighbours: PropTypes.number,\r\n  onPageChanged: PropTypes.func,\r\n  currentPage: PropTypes.number,\r\n  className: PropTypes.string\r\n}\r\n","import {\n  GET_PROJECTS_REQUEST,\n  CREATE_PROJECT_REQUEST,\n  RESET_PROJECT,\n  GET_PROJECT_DETAIL_REQUEST,\n  UPDATE_PROJECT_REQUEST,\n  DELETE_PROJECT_REQUEST,\n} from '../../constants/actionTypes';\n\nexport const getProjects = query => ({\n  type: GET_PROJECTS_REQUEST,\n  payload: query\n});\n\nexport const createProjectRequest = param => ({\n  type: CREATE_PROJECT_REQUEST,\n  payload: param\n});\n\nexport const resetProjectState = () => ({\n  type: RESET_PROJECT,\n});\n\nexport const getProjectDetailRequest = (param) => ({\n  type: GET_PROJECT_DETAIL_REQUEST,\n  payload: param\n});\n\nexport const updateProjectRequest = (param) => ({\n  type: UPDATE_PROJECT_REQUEST,\n  payload: param\n});\n\nexport const deleteProjectRequest = (param) => ({\n  type: DELETE_PROJECT_REQUEST,\n  payload: param\n});\n","import { useMemo } from 'react';\r\nimport {\r\n  useFailed,\r\n  useFetchByParam,\r\n  useQueryParams,\r\n  useSubmit,\r\n  useSuccess,\r\n  useResetState\r\n} from '../utils';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  getProjects,\r\n  createProjectRequest,\r\n  resetProjectState,\r\n  getProjectDetailRequest,\r\n  updateProjectRequest,\r\n  deleteProjectRequest,\r\n} from '../../redux/project/action';\r\nimport Api from 'api'\r\n\r\nconst getSelector = key => state => state.project[key];\r\n\r\nconst loadingSelector = getSelector('isLoading');\r\nconst listSelector = getSelector('list');\r\nconst paramsSelector = getSelector('listParams');\r\nconst getListFailedSelector = getSelector('getListFailed');\r\n\r\nconst itemSelector = getSelector('item');\r\nconst getItemFailedSelector = getSelector('getItemFailed');\r\n\r\nconst createSuccessSelector = getSelector('createSuccess');\r\nconst createFailedSelector = getSelector('createFailed');\r\n\r\nconst updateSuccessSelector = getSelector('updateSuccess');\r\nconst updateFailedSelector = getSelector('updateFailed');\r\n\r\nconst deleteSuccessSelector = getSelector('deleteSuccess');\r\nconst deleteFailedSelector = getSelector('deleteFailed');\r\n\r\nexport const useProjectsQueryParams = () => {\r\n  const query = useQueryParams();\r\n  const page = query.get('page') || 1;\r\n  const per_page = query.get('per_page') || 10;\r\n\r\n  return useMemo(() => {\r\n    return {\r\n      page,\r\n      per_page,\r\n      order_by_created_at: 'desc',\r\n    };\r\n    //eslint-disable-next-line\r\n  }, [page, per_page]);\r\n};\r\n\r\nexport const useProjects = (param) => {\r\n  return useFetchByParam({\r\n    action: getProjects,\r\n    loadingSelector,\r\n    dataSelector: listSelector,\r\n    failedSelector: getListFailedSelector,\r\n    param\r\n  });\r\n};\r\n\r\nexport const asyncProjects = (param) => {\r\n  return Api.project.getAll(param)\r\n    .then(res => Promise.resolve(res.data))\r\n};\r\n\r\nexport const useProjectsResParams = () => {\r\n  return useSelector(paramsSelector)\r\n};\r\n\r\nexport const useInitProject = (project) => {\r\n  return useMemo(() => {\r\n    return {\r\n      id: project?.id || null,\r\n      name: project?.name || '',\r\n      giturl: project?.giturl || '',\r\n      description: project?.description || '',\r\n    }\r\n  }, [project])\r\n}\r\n\r\nexport const useCreateProject = () => {\r\n  const navigate = useNavigate();\r\n  const [isLoading, handleSubmit] = useSubmit({\r\n    loadingSelector,\r\n    action: createProjectRequest\r\n  });\r\n\r\n  const successCallback = () => navigate(\"/project\");\r\n\r\n  useSuccess(createSuccessSelector, 'Create project success', successCallback);\r\n  useFailed(createFailedSelector, 'Create project Failed');\r\n\r\n  return [isLoading, handleSubmit];\r\n}\r\n\r\nexport const useUpdateProject = () => {\r\n  const navigate = useNavigate();\r\n  const [isLoading, handleSubmit] = useSubmit({\r\n    loadingSelector,\r\n    action: updateProjectRequest\r\n  });\r\n\r\n  const successCallback = () => navigate(\"/project\");\r\n\r\n  useSuccess(updateSuccessSelector, 'Update project success', successCallback);\r\n  useFailed(updateFailedSelector, 'Update project Failed');\r\n\r\n  return [isLoading, handleSubmit];\r\n}\r\n\r\nexport const useResetProject = () => {\r\n  useResetState(resetProjectState);\r\n};\r\n\r\nexport const useProjectDetail = (param) => {\r\n  return useFetchByParam({\r\n    action: getProjectDetailRequest,\r\n    loadingSelector,\r\n    dataSelector: itemSelector,\r\n    failedSelector: getItemFailedSelector,\r\n    param\r\n  });\r\n};\r\n\r\nexport const useDeleteProject = (params) => {\r\n  const dispatch = useDispatch();\r\n  const [isLoading, handleSubmit] = useSubmit({\r\n    loadingSelector,\r\n    action: deleteProjectRequest\r\n  });\r\n\r\n  const successCallback = () => {dispatch(getProjects(params))}\r\n\r\n  useSuccess(deleteSuccessSelector, 'Delete project success', successCallback);\r\n  useFailed(deleteFailedSelector, 'Delete project Failed');\r\n\r\n  return [isLoading, handleSubmit];\r\n}\r\n","import { Fragment } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport queryString from 'query-string'\r\nimport {\r\n  useProjects,\r\n  useProjectsQueryParams,\r\n  useProjectsResParams,\r\n  useDeleteProject\r\n} from 'hooks/project';\r\n\r\nimport Breadcrumb from \"components/Breadcrumb\"\r\nimport Pagination from \"components/Pagination\"\r\nimport ButtonDelete from \"components/Form/ButtonDelete\"\r\n\r\nconst breadcrumb = [\r\n  {name: '', url: '/', icon: 'mdi mdi-home-outline fs-4'},\r\n  {name: 'Project List', url: null, icon: null},\r\n]\r\n\r\nfunction Product() {\r\n  const navigate = useNavigate();\r\n  const searchQuery = useProjectsQueryParams();\r\n  const [projects] = useProjects(searchQuery);\r\n  const resParams = useProjectsResParams();\r\n  const [, handleDelete] = useDeleteProject(searchQuery);\r\n\r\n  const changeParams = (type, value) => {\r\n    const params = {...searchQuery}\r\n    params[type] = value\r\n    if (type !== 'page') {\r\n      params.page = 1\r\n    }\r\n    navigate(\r\n      {\r\n        pathname: '/project',\r\n        search: `?${queryString.stringify(params)}`,\r\n      },\r\n      { replace: true }\r\n    )\r\n  }\r\n\r\n  const onPageChanged = (page) => {\r\n    changeParams('page', page)\r\n  }\r\n\r\n  const deleteProject = (project) => {\r\n    handleDelete({id: project.id})\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb\r\n        breadcrumb={breadcrumb}\r\n        title=\"Project List\"\r\n        showButton\r\n        buttonText={'Create project'}\r\n        buttonAction={\"/project/create\"}\r\n      />\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card main-body-table\">\r\n              <div className=\"card-body\">\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table mb-0 table-hover align-middle text-nowrap\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"border-top-0\">Name</th>\r\n                        <th className=\"border-top-0\">Git url</th>\r\n                        <th className=\"border-top-0\">Description</th>\r\n                        <th className=\"border-top-0\"></th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {projects.map((project) => (\r\n                        <tr key={project.id}>\r\n                          <td>{project.name}</td>\r\n                          <td>{project.giturl}</td>\r\n                          <td>{project.description}</td>\r\n                          <td className=\"text-end\">\r\n                            <Link className=\"btn btn-sm btn-primary text-white\" to={`/project/${project.id}/edit`}>\r\n                              Edit\r\n                            </Link>\r\n                            <ButtonDelete onDelete={() => deleteProject(project)} />\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <nav className=\"pagination-content\">\r\n                  {resParams.total ? <Pagination\r\n                    totalRecords={+resParams.total}\r\n                    pageLimit={+resParams.per_page}\r\n                    pageNeighbours={2}\r\n                    currentPage={+resParams.current_page}\r\n                    onPageChanged={onPageChanged}\r\n                    className=\"pt-0\"\r\n                  /> : null}\r\n                </nav>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n"],"names":["Breadcrumb","breadcrumb","title","showButton","buttonAction","buttonText","className","map","b","key","Fragment","url","to","icon","name","defaultProps","DeleteModal","isModalOpen","toggleModal","onDelete","isOpen","toggle","color","onClick","Button","useReducer","p","type","LEFT_PAGE","LEFT_PAGE_DISABLE","RIGHT_PAGE","RIGHT_PAGE_DISABLE","FIRST_PAGE","FIRST_PAGE_DISABLE","LAST_PAGE","LAST_PAGE_DISABLE","range","from","step","i","push","Pagination","props","totalRecords","pageLimit","pageNeighbours","onPageChanged","currentPage","useState","totalPages","setTotalPages","useEffect","Math","ceil","clickPageChanged","e","page","preventDefault","pages","totalNumbers","startPage","max","endPage","min","hasLeftSpill","hasRightSpill","spillOffset","length","btnLeft","btnRight","btnFirst","btnLast","extraPages","fetchPageNumbers","index","href","getProjects","query","GET_PROJECTS_REQUEST","payload","createProjectRequest","param","CREATE_PROJECT_REQUEST","resetProjectState","RESET_PROJECT","getProjectDetailRequest","GET_PROJECT_DETAIL_REQUEST","updateProjectRequest","UPDATE_PROJECT_REQUEST","deleteProjectRequest","DELETE_PROJECT_REQUEST","getSelector","state","project","loadingSelector","listSelector","paramsSelector","getListFailedSelector","itemSelector","getItemFailedSelector","createSuccessSelector","createFailedSelector","updateSuccessSelector","updateFailedSelector","deleteSuccessSelector","deleteFailedSelector","useProjectsQueryParams","useQueryParams","get","per_page","useMemo","order_by_created_at","useProjects","useFetchByParam","action","dataSelector","failedSelector","useProjectsResParams","useSelector","useInitProject","id","giturl","description","useCreateProject","navigate","useNavigate","useSubmit","isLoading","handleSubmit","useSuccess","useFailed","useUpdateProject","useResetProject","useResetState","useProjectDetail","useDeleteProject","params","dispatch","useDispatch","searchQuery","projects","resParams","handleDelete","deleteProject","total","current_page","value","pathname","search","queryString","replace","changeParams"],"sourceRoot":""}