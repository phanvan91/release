{"version":3,"file":"static/js/489.70473138.chunk.js","mappings":"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","sources":["components/Breadcrumb/Breadcrumb.js","components/Form/ErrorMEssage.js","components/Form/Input.js","components/Form/Submit.js","pages/Auth/Register/RegisterForm.js","pages/User/Create.js"],"sourcesContent":["import { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nconst Breadcrumb = ({\n  breadcrumb,\n  title,\n  showButton,\n  buttonAction,\n  buttonText,\n}) => (\n  <div className=\"page-breadcrumb\">\n    <div className=\"row align-items-center\">\n      <div className=\"col-6\">\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb mb-0 d-flex align-items-center\">\n            {breadcrumb.map((b, key) => (\n              <Fragment key={key}>\n                {b.url && (\n                  <li className=\"breadcrumb-item\">\n                    <Link to={b.url} className=\"link\">\n                      {b.icon && <i className={b.icon}></i>}\n                      {b.icon && ' '}\n                      {b.name}\n                    </Link>\n                  </li>\n                )}\n                {!b.url && <li className=\"breadcrumb-item active\">{b.name}</li>}\n              </Fragment>\n            ))}\n          </ol>\n        </nav>\n        {title ? <h1 className=\"mb-0 fw-bold\">{title}</h1> : null}\n      </div>\n      <div className=\"col-6\">\n        {showButton ? (\n          <div className=\"text-end upgrade-btn\">\n            <Link to={buttonAction} className=\"btn btn-primary text-white\">\n              {buttonText}\n            </Link>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  </div>\n)\n\nexport default Breadcrumb\n\nBreadcrumb.defaultProps = {\n  breadcrumb: [],\n  title: '',\n  showButton: false,\n}\n\nBreadcrumb.propTypes = {\n  title: PropTypes.string,\n  breadcrumb: PropTypes.array,\n  className: PropTypes.string,\n  showButton: PropTypes.bool,\n  buttonAction: PropTypes.func,\n  buttonText: PropTypes.string,\n}\n","import PropTypes from 'prop-types'\n\nconst ErrorMEssage = ({error}) => error && <p className=\"text-danger mb-1\">{error.message}</p>\n\nexport default ErrorMEssage\n\nErrorMEssage.propTypes = {\n  error: PropTypes.object,\n}\n","import { forwardRef } from 'react';\nimport PropTypes from 'prop-types'\nimport ErrorMEssage from './ErrorMEssage';\n\nconst Input = forwardRef(({\n  type = 'text',\n  onChange,\n  placeholder,\n  name,\n  errors,\n  disabled = false\n}, ref) => (\n  <>\n    <input\n      ref={ref}\n      id={name}\n      name={name}\n      onChange={onChange}\n      type={type}\n      className={errors[name] ? 'form-control border border-danger' : 'form-control'}\n      placeholder={placeholder}\n      disabled={disabled}\n    />\n    <ErrorMEssage error={errors[name]} />\n  </>\n));\n\nInput.defaultProps = {\n}\n\nInput.propTypes = {\n  type: PropTypes.string,\n  onChange: PropTypes.func,\n  placeholder: PropTypes.string,\n  name: PropTypes.string,\n  errors: PropTypes.object,\n  disabled: PropTypes.bool,\n}\n\nInput.displayName = 'Input'\n\nexport default Input\n","import PropTypes from 'prop-types'\n\nconst Submit = ({label, loading, className = ''}) => (\n  <>\n    <button\n      type=\"submit\"\n      className={`submit-btn${className ? (' ' + className) : ''}`}\n      disabled={loading}\n    >\n      {label}\n      {loading ? (\n        <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n      ) : ''}\n    </button>\n  </>\n);\n\nexport default Submit\n\nSubmit.defaultProps = {}\n\nSubmit.propTypes = {\n  label: PropTypes.string,\n  loading: PropTypes.bool,\n  className: PropTypes.string,\n}\n","import { useForm } from 'react-hook-form';\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { useRegister, useResetRegister } from 'hooks/auth';\r\nimport Input from 'components/Form/Input';\r\nimport Submit from 'components/Form/Submit';\r\n\r\nconst schema = yup.object().shape({\r\n  email: yup.string()\r\n    .email()\r\n    .required(\"The email field is required\"),\r\n  name: yup.string()\r\n    .required(\"The username field is required\"),\r\n  password: yup.string()\r\n    .required(\"The password field is required\")\r\n    .min(6, 'The password must be at least 6 characters.'),\r\n  // password_confirmation: yup.string()\r\n  //   .oneOf([yup.ref('password'), null], 'Passwords confirmation must match'),\r\n});\r\n\r\nfunction RegisterForm() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setError,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: {\r\n      // email: \"phanvan92ff9@gmail.com\",\r\n      // password: \"123456\",\r\n    },\r\n    resolver: yupResolver(schema)\r\n  });\r\n  useResetRegister()\r\n\r\n  const [isLoading, onSubmit] = useRegister({setError});\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"row align-items-center mb-3\">\r\n        <div className=\"col-sm-4\">Username</div>\r\n        <div className=\"col-sm-8\">\r\n          <Input\r\n            {...register('name')}\r\n            placeholder=\"Username\"\r\n            errors={errors}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"row align-items-center mb-3\">\r\n        <div className=\"col-sm-4\">Email</div>\r\n        <div className=\"col-sm-8\">\r\n          <Input\r\n            {...register('email')}\r\n            placeholder=\"Email\"\r\n            errors={errors}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"row align-items-center mb-3\">\r\n        <div className=\"col-sm-4\">Password</div>\r\n        <div className=\"col-sm-8\">\r\n          <Input\r\n            type={'password'}\r\n            {...register('password')}\r\n            placeholder=\"******\"\r\n            errors={errors}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/*<div className=\"row align-items-center mb-3\">\r\n        <div className=\"col-sm-4\">Password confirmation</div>\r\n        <div className=\"col-sm-8\">\r\n          <Input\r\n            type={'password'}\r\n            {...register('password_confirmation')}\r\n            placeholder=\"password_confirmation\"\r\n            errors={errors}\r\n          />\r\n        </div>\r\n      </div>*/}\r\n      <div className=\"row align-items-center mb-3\">\r\n        <div className=\"col-sm-4\"></div>\r\n        <div className=\"col-sm-8\">\r\n          <Submit\r\n            loading={isLoading}\r\n            className=\"btn btn-primary text-white btn-block\"\r\n            label=\"Register\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default RegisterForm;\r\n","import { Fragment } from 'react';\r\n\r\nimport Breadcrumb from \"components/Breadcrumb\"\r\nimport RegisterForm from './../Auth/Register/RegisterForm'\r\n\r\nconst breadcrumbCreate = [\r\n  {name: '', url: '/', icon: 'mdi mdi-home-outline fs-4'},\r\n  {name: 'User', url: '/user', icon: null},\r\n  {name: 'Create', url: null, icon: null},\r\n]\r\n\r\nfunction UserCreate() {\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb\r\n        breadcrumb={breadcrumbCreate}\r\n        title={\"User Create\"}\r\n      />\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">\r\n                  {\"Create new user\"}\r\n                </h4>\r\n                <hr />\r\n                <RegisterForm />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default UserCreate;\r\n"],"names":["Breadcrumb","breadcrumb","title","showButton","buttonAction","buttonText","className","map","b","key","Fragment","url","to","icon","name","defaultProps","error","message","Input","forwardRef","ref","type","onChange","placeholder","errors","disabled","id","propTypes","PropTypes","displayName","Submit","label","loading","role","schema","yup","shape","email","required","password","min","useForm","defaultValues","resolver","yupResolver","register","handleSubmit","setError","formState","useResetRegister","useRegister","isLoading","onSubmit","breadcrumbCreate"],"sourceRoot":""}