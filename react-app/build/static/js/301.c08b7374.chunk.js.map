{"version":3,"file":"static/js/301.c08b7374.chunk.js","mappings":"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","sources":["components/Breadcrumb/Breadcrumb.js","components/Form/ErrorMEssage.js","components/Form/Input.js","components/Form/Submit.js","redux/environment/action.js","hooks/environment/index.js","redux/project/action.js","hooks/project/index.js","pages/Environment/EnvironmentForm/EnvironmentFormValidation.js","pages/Environment/EnvironmentForm/EnvironmentForm.js","pages/Environment/EnvironmentForm/index.js"],"sourcesContent":["import { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nconst Breadcrumb = ({\n  breadcrumb,\n  title,\n  showButton,\n  buttonAction,\n  buttonText,\n}) => (\n  <div className=\"page-breadcrumb\">\n    <div className=\"row align-items-center\">\n      <div className=\"col-6\">\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb mb-0 d-flex align-items-center\">\n            {breadcrumb.map((b, key) => (\n              <Fragment key={key}>\n                {b.url && (\n                  <li className=\"breadcrumb-item\">\n                    <Link to={b.url} className=\"link\">\n                      {b.icon && <i className={b.icon}></i>}\n                      {b.icon && ' '}\n                      {b.name}\n                    </Link>\n                  </li>\n                )}\n                {!b.url && <li className=\"breadcrumb-item active\">{b.name}</li>}\n              </Fragment>\n            ))}\n          </ol>\n        </nav>\n        {title ? <h1 className=\"mb-0 fw-bold\">{title}</h1> : null}\n      </div>\n      <div className=\"col-6\">\n        {showButton ? (\n          <div className=\"text-end upgrade-btn\">\n            <Link to={buttonAction} className=\"btn btn-primary text-white\">\n              {buttonText}\n            </Link>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  </div>\n)\n\nexport default Breadcrumb\n\nBreadcrumb.defaultProps = {\n  breadcrumb: [],\n  title: '',\n  showButton: false,\n}\n\nBreadcrumb.propTypes = {\n  title: PropTypes.string,\n  breadcrumb: PropTypes.array,\n  className: PropTypes.string,\n  showButton: PropTypes.bool,\n  buttonAction: PropTypes.func,\n  buttonText: PropTypes.string,\n}\n","import PropTypes from 'prop-types'\n\nconst ErrorMEssage = ({error}) => error && <p className=\"text-danger mb-1\">{error.message}</p>\n\nexport default ErrorMEssage\n\nErrorMEssage.propTypes = {\n  error: PropTypes.object,\n}\n","import { forwardRef } from 'react';\nimport PropTypes from 'prop-types'\nimport ErrorMEssage from './ErrorMEssage';\n\nconst Input = forwardRef(({\n  type = 'text',\n  onChange,\n  placeholder,\n  name,\n  errors,\n  disabled = false\n}, ref) => (\n  <>\n    <input\n      ref={ref}\n      id={name}\n      name={name}\n      onChange={onChange}\n      type={type}\n      className={errors[name] ? 'form-control border border-danger' : 'form-control'}\n      placeholder={placeholder}\n      disabled={disabled}\n    />\n    <ErrorMEssage error={errors[name]} />\n  </>\n));\n\nInput.defaultProps = {\n}\n\nInput.propTypes = {\n  type: PropTypes.string,\n  onChange: PropTypes.func,\n  placeholder: PropTypes.string,\n  name: PropTypes.string,\n  errors: PropTypes.object,\n  disabled: PropTypes.bool,\n}\n\nInput.displayName = 'Input'\n\nexport default Input\n","import PropTypes from 'prop-types'\n\nconst Submit = ({label, loading, className = ''}) => (\n  <>\n    <button\n      type=\"submit\"\n      className={`submit-btn${className ? (' ' + className) : ''}`}\n      disabled={loading}\n    >\n      {label}\n      {loading ? (\n        <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n      ) : ''}\n    </button>\n  </>\n);\n\nexport default Submit\n\nSubmit.defaultProps = {}\n\nSubmit.propTypes = {\n  label: PropTypes.string,\n  loading: PropTypes.bool,\n  className: PropTypes.string,\n}\n","import {\n  GET_ENVIRONMENTS_REQUEST,\n  CREATE_ENVIRONMENT_REQUEST,\n  RESET_ENVIRONMENT,\n  GET_ENVIRONMENT_DETAIL_REQUEST,\n  UPDATE_ENVIRONMENT_REQUEST,\n  DELETE_ENVIRONMENT_REQUEST,\n} from '../../constants/actionTypes';\n\nexport const getEnvironments = query => ({\n  type: GET_ENVIRONMENTS_REQUEST,\n  payload: query\n});\n\nexport const createEnvironmentRequest = param => ({\n  type: CREATE_ENVIRONMENT_REQUEST,\n  payload: param\n});\n\nexport const resetEnvironmentState = () => ({\n  type: RESET_ENVIRONMENT,\n});\n\nexport const getEnvironmentDetailRequest = (param) => ({\n  type: GET_ENVIRONMENT_DETAIL_REQUEST,\n  payload: param\n});\n\nexport const updateEnvironmentRequest = (param) => ({\n  type: UPDATE_ENVIRONMENT_REQUEST,\n  payload: param\n});\n\nexport const deleteEnviromentRequest = (param) => ({\n  type: DELETE_ENVIRONMENT_REQUEST,\n  payload: param\n});\n","import { useMemo } from 'react';\r\nimport {\r\n  useFailed,\r\n  useFetchByParam,\r\n  useQueryParams,\r\n  useSubmit,\r\n  useSuccess,\r\n  useResetState\r\n} from '../utils';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  getEnvironments,\r\n  createEnvironmentRequest,\r\n  resetEnvironmentState,\r\n  getEnvironmentDetailRequest,\r\n  updateEnvironmentRequest,\r\n  deleteEnviromentRequest,\r\n} from '../../redux/environment/action';\r\nimport Api from 'api'\r\n\r\nconst getSelector = key => state => state.environment[key];\r\n\r\nconst loadingSelector = getSelector('isLoading');\r\nconst listSelector = getSelector('list');\r\nconst paramsSelector = getSelector('listParams');\r\nconst getListFailedSelector = getSelector('getListFailed');\r\n\r\nconst itemSelector = getSelector('item');\r\nconst getItemFailedSelector = getSelector('getItemFailed');\r\n\r\nconst createSuccessSelector = getSelector('createSuccess');\r\nconst createFailedSelector = getSelector('createFailed');\r\n\r\nconst updateSuccessSelector = getSelector('updateSuccess');\r\nconst updateFailedSelector = getSelector('updateFailed');\r\n\r\nconst deleteSuccessSelector = getSelector('deleteSuccess');\r\nconst deleteFailedSelector = getSelector('deleteFailed');\r\n\r\nexport const useEnvironmentsQueryParams = () => {\r\n  const query = useQueryParams();\r\n  const page = query.get('page') || 1;\r\n  const per_page = query.get('per_page') || 10;\r\n  const project_id = query.get('project_id');\r\n\r\n  return useMemo(() => {\r\n    return {\r\n      page,\r\n      per_page,\r\n      order_by_created_at: 'desc',\r\n      project_id: project_id || undefined,\r\n    };\r\n    //eslint-disable-next-line\r\n  }, [page, per_page, project_id]);\r\n};\r\n\r\nexport const useEnvironments = (param) => {\r\n  return useFetchByParam({\r\n    action: getEnvironments,\r\n    loadingSelector,\r\n    dataSelector: listSelector,\r\n    failedSelector: getListFailedSelector,\r\n    param\r\n  });\r\n};\r\n\r\nexport const asyncEnvironments = (param) => {\r\n  return Api.environment.getAll(param)\r\n    .then(res => Promise.resolve(res.data))\r\n};\r\n\r\nexport const useEnvironmentsResParams = () => {\r\n  return useSelector(paramsSelector)\r\n};\r\n\r\nexport const useInitEnvironment = (environment, projects) => {\r\n  let project_id = null\r\n  if (environment?.project_id) {\r\n    project_id = projects.find(e => e.id == environment.project_id)\r\n    if (project_id) {\r\n      project_id = {\r\n        value: project_id.id,\r\n        label: project_id.name,\r\n      }\r\n    }\r\n  }\r\n\r\n  return useMemo(() => {\r\n    return {\r\n      id: environment?.id || null,\r\n      project_id: project_id,\r\n      name: environment?.name || '',\r\n      baseurl: environment?.baseurl || '',\r\n      description: environment?.description || '',\r\n    }\r\n  }, [environment, project_id])\r\n}\r\n\r\nexport const useCreateEnvironment = () => {\r\n  const navigate = useNavigate();\r\n  const [isLoading, handleSubmit] = useSubmit({\r\n    loadingSelector,\r\n    action: createEnvironmentRequest\r\n  });\r\n\r\n  const successCallback = () => navigate(\"/environment\");\r\n\r\n  useSuccess(createSuccessSelector, 'Create environment success', successCallback);\r\n  useFailed(createFailedSelector, 'Create environment Failed');\r\n\r\n  const _handleSubmit = (values) => {\r\n    const data = {...values, project_id: values.project_id?.value}\r\n    return handleSubmit(data)\r\n  }\r\n\r\n  return [isLoading, _handleSubmit];\r\n}\r\n\r\nexport const useUpdateEnvironment = () => {\r\n  const navigate = useNavigate();\r\n  const [isLoading, handleSubmit] = useSubmit({\r\n    loadingSelector,\r\n    action: updateEnvironmentRequest\r\n  });\r\n\r\n  const successCallback = () => navigate(\"/environment\");\r\n\r\n  useSuccess(updateSuccessSelector, 'Update environment success', successCallback);\r\n  useFailed(updateFailedSelector, 'Update environment Failed');\r\n\r\n  const _handleSubmit = (values) => {\r\n    const data = {...values, project_id: values.project_id?.value}\r\n    return handleSubmit(data)\r\n  }\r\n\r\n  return [isLoading, _handleSubmit];\r\n}\r\n\r\nexport const useResetEnvironment = () => {\r\n  useResetState(resetEnvironmentState);\r\n};\r\n\r\nexport const useEnvironmentDetail = (param) => {\r\n  return useFetchByParam({\r\n    action: getEnvironmentDetailRequest,\r\n    loadingSelector,\r\n    dataSelector: itemSelector,\r\n    failedSelector: getItemFailedSelector,\r\n    param\r\n  });\r\n};\r\n\r\nexport const useDeleteEnvironment = (params) => {\r\n  const dispatch = useDispatch();\r\n  const [isLoading, handleSubmit] = useSubmit({\r\n    loadingSelector,\r\n    action: deleteEnviromentRequest\r\n  });\r\n\r\n  const successCallback = () => {dispatch(getEnvironments(params))}\r\n\r\n  useSuccess(deleteSuccessSelector, 'Delete environment success', successCallback);\r\n  useFailed(deleteFailedSelector, 'Delete environment Failed');\r\n\r\n  return [isLoading, handleSubmit];\r\n}\r\n","import {\n  GET_PROJECTS_REQUEST,\n  CREATE_PROJECT_REQUEST,\n  RESET_PROJECT,\n  GET_PROJECT_DETAIL_REQUEST,\n  UPDATE_PROJECT_REQUEST,\n  DELETE_PROJECT_REQUEST,\n} from '../../constants/actionTypes';\n\nexport const getProjects = query => ({\n  type: GET_PROJECTS_REQUEST,\n  payload: query\n});\n\nexport const createProjectRequest = param => ({\n  type: CREATE_PROJECT_REQUEST,\n  payload: param\n});\n\nexport const resetProjectState = () => ({\n  type: RESET_PROJECT,\n});\n\nexport const getProjectDetailRequest = (param) => ({\n  type: GET_PROJECT_DETAIL_REQUEST,\n  payload: param\n});\n\nexport const updateProjectRequest = (param) => ({\n  type: UPDATE_PROJECT_REQUEST,\n  payload: param\n});\n\nexport const deleteProjectRequest = (param) => ({\n  type: DELETE_PROJECT_REQUEST,\n  payload: param\n});\n","import { useMemo } from 'react';\r\nimport {\r\n  useFailed,\r\n  useFetchByParam,\r\n  useQueryParams,\r\n  useSubmit,\r\n  useSuccess,\r\n  useResetState\r\n} from '../utils';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  getProjects,\r\n  createProjectRequest,\r\n  resetProjectState,\r\n  getProjectDetailRequest,\r\n  updateProjectRequest,\r\n  deleteProjectRequest,\r\n} from '../../redux/project/action';\r\nimport Api from 'api'\r\n\r\nconst getSelector = key => state => state.project[key];\r\n\r\nconst loadingSelector = getSelector('isLoading');\r\nconst listSelector = getSelector('list');\r\nconst paramsSelector = getSelector('listParams');\r\nconst getListFailedSelector = getSelector('getListFailed');\r\n\r\nconst itemSelector = getSelector('item');\r\nconst getItemFailedSelector = getSelector('getItemFailed');\r\n\r\nconst createSuccessSelector = getSelector('createSuccess');\r\nconst createFailedSelector = getSelector('createFailed');\r\n\r\nconst updateSuccessSelector = getSelector('updateSuccess');\r\nconst updateFailedSelector = getSelector('updateFailed');\r\n\r\nconst deleteSuccessSelector = getSelector('deleteSuccess');\r\nconst deleteFailedSelector = getSelector('deleteFailed');\r\n\r\nexport const useProjectsQueryParams = () => {\r\n  const query = useQueryParams();\r\n  const page = query.get('page') || 1;\r\n  const per_page = query.get('per_page') || 10;\r\n\r\n  return useMemo(() => {\r\n    return {\r\n      page,\r\n      per_page,\r\n      order_by_created_at: 'desc',\r\n    };\r\n    //eslint-disable-next-line\r\n  }, [page, per_page]);\r\n};\r\n\r\nexport const useProjects = (param) => {\r\n  return useFetchByParam({\r\n    action: getProjects,\r\n    loadingSelector,\r\n    dataSelector: listSelector,\r\n    failedSelector: getListFailedSelector,\r\n    param\r\n  });\r\n};\r\n\r\nexport const asyncProjects = (param) => {\r\n  return Api.project.getAll(param)\r\n    .then(res => Promise.resolve(res.data))\r\n};\r\n\r\nexport const useProjectsResParams = () => {\r\n  return useSelector(paramsSelector)\r\n};\r\n\r\nexport const useInitProject = (project) => {\r\n  return useMemo(() => {\r\n    return {\r\n      id: project?.id || null,\r\n      name: project?.name || '',\r\n      giturl: project?.giturl || '',\r\n      description: project?.description || '',\r\n    }\r\n  }, [project])\r\n}\r\n\r\nexport const useCreateProject = () => {\r\n  const navigate = useNavigate();\r\n  const [isLoading, handleSubmit] = useSubmit({\r\n    loadingSelector,\r\n    action: createProjectRequest\r\n  });\r\n\r\n  const successCallback = () => navigate(\"/project\");\r\n\r\n  useSuccess(createSuccessSelector, 'Create project success', successCallback);\r\n  useFailed(createFailedSelector, 'Create project Failed');\r\n\r\n  return [isLoading, handleSubmit];\r\n}\r\n\r\nexport const useUpdateProject = () => {\r\n  const navigate = useNavigate();\r\n  const [isLoading, handleSubmit] = useSubmit({\r\n    loadingSelector,\r\n    action: updateProjectRequest\r\n  });\r\n\r\n  const successCallback = () => navigate(\"/project\");\r\n\r\n  useSuccess(updateSuccessSelector, 'Update project success', successCallback);\r\n  useFailed(updateFailedSelector, 'Update project Failed');\r\n\r\n  return [isLoading, handleSubmit];\r\n}\r\n\r\nexport const useResetProject = () => {\r\n  useResetState(resetProjectState);\r\n};\r\n\r\nexport const useProjectDetail = (param) => {\r\n  return useFetchByParam({\r\n    action: getProjectDetailRequest,\r\n    loadingSelector,\r\n    dataSelector: itemSelector,\r\n    failedSelector: getItemFailedSelector,\r\n    param\r\n  });\r\n};\r\n\r\nexport const useDeleteProject = (params) => {\r\n  const dispatch = useDispatch();\r\n  const [isLoading, handleSubmit] = useSubmit({\r\n    loadingSelector,\r\n    action: deleteProjectRequest\r\n  });\r\n\r\n  const successCallback = () => {dispatch(getProjects(params))}\r\n\r\n  useSuccess(deleteSuccessSelector, 'Delete project success', successCallback);\r\n  useFailed(deleteFailedSelector, 'Delete project Failed');\r\n\r\n  return [isLoading, handleSubmit];\r\n}\r\n","import * as yup from \"yup\";\r\n\r\nconst schema = yup.object().shape({\r\n  project_id: yup.object()\r\n    .shape({\r\n      value: yup.string(),\r\n      label: yup.string(),\r\n    })\r\n    .nullable()\r\n    .required('The project field is required'),\r\n  name: yup.string()\r\n    .required(\"The environment name field is required\")\r\n    .max(255, 'The environment name may not be greater than 255 characters.'),\r\n  baseurl: yup.string()\r\n    .required(\"The base url field is required\")\r\n    .max(255, 'The base url may not be greater than 255 characters.'),\r\n  description: yup.string().required(\"The description field is required\"),\r\n});\r\n\r\nexport default schema\r\n","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport Select from 'react-select'\r\n\r\nimport {\r\n  useInitEnvironment,\r\n  useCreateEnvironment,\r\n  useResetEnvironment,\r\n  useUpdateEnvironment,\r\n} from 'hooks/environment';\r\nimport {\r\n  useProjects,\r\n} from 'hooks/project';\r\n\r\nimport Input from 'components/Form/Input';\r\nimport Submit from 'components/Form/Submit';\r\nimport ErrorMEssage from 'components/Form/ErrorMEssage';\r\n\r\nimport EnvironmentFormValidation from './EnvironmentFormValidation';\r\n\r\nfunction EnvironmentForm({environment}) {\r\n  const [projectParams] = useState({per_page: 0})\r\n  const [projects] = useProjects(projectParams)\r\n  const defaultValues = useInitEnvironment(environment, projects)\r\n  useResetEnvironment()\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setError,\r\n    formState: { errors },\r\n    reset,\r\n    control,\r\n  } = useForm({\r\n    defaultValues: defaultValues,\r\n    resolver: yupResolver(EnvironmentFormValidation)\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (environment) {\r\n      reset(defaultValues)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [environment, projects])\r\n\r\n  const [loadingSubmit, onSubmit] = useCreateEnvironment({setError});\r\n  const [loadingUpdate, onUpdate] = useUpdateEnvironment({setError});\r\n\r\n  const optionsProject = projects.map(e => ({value: e.id, label: e.name}))\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(environment ? onUpdate : onSubmit)}>\r\n      <div className=\"row mb-3\">\r\n        <div className=\"col-sm-4\">\r\n          Project <span className=\"text-danger\">*</span>\r\n        </div>\r\n        <div className=\"col-sm-8\">\r\n          <Controller\r\n            control={control}\r\n            name={'project_id'}\r\n            render={({ field: { onChange, value, ref } }) => (<Select\r\n              ref={ref}\r\n              onChange={onChange}\r\n              options={optionsProject}\r\n              placeholder=\"Select Project\"\r\n              className={errors?.project_id ? \"border border-danger rounded-4\" : ''}\r\n              value={value}\r\n            />)}\r\n          />\r\n          <ErrorMEssage error={errors?.project_id} />\r\n        </div>\r\n      </div>\r\n      <div className=\"row mb-3\">\r\n        <div className=\"col-sm-4\">\r\n          Environment name <span className=\"text-danger\">*</span>\r\n        </div>\r\n        <div className=\"col-sm-8\">\r\n          <Input\r\n            {...register('name')}\r\n            placeholder=\"Environment name\"\r\n            errors={errors}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"row mb-3\">\r\n        <div className=\"col-sm-4\">\r\n          Base url <span className=\"text-danger\">*</span>\r\n        </div>\r\n        <div className=\"col-sm-8\">\r\n          <Input\r\n            {...register('baseurl')}\r\n            placeholder=\"Base url\"\r\n            errors={errors}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"row mb-3\">\r\n        <div className=\"col-sm-4\">\r\n          Description\r\n        </div>\r\n        <div className=\"col-sm-8\">\r\n          <textarea rows=\"5\" className=\"form-control\" {...register('description')}></textarea>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div className=\"row\">\r\n        <div className=\"col text-end\">\r\n          <Submit\r\n            loading={environment ? loadingUpdate : loadingSubmit}\r\n            className=\"btn btn-primary text-white\"\r\n            label={environment ? \"Update\" : \"Create\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default EnvironmentForm;\r\n\r\nEnvironmentForm.defaultProps = {}\r\n\r\nEnvironmentForm.propTypes = {\r\n  environment: PropTypes.object,\r\n}\r\n","import { Fragment } from 'react';\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { useEnvironmentDetail } from 'hooks/environment';\r\n\r\nimport EnvironmentForm from './EnvironmentForm'\r\nimport Breadcrumb from \"components/Breadcrumb\"\r\nimport LoadingScreen from \"components/LoadingScreen\"\r\n\r\nconst breadcrumbCreate = [\r\n  {name: '', url: '/', icon: 'mdi mdi-home-outline fs-4'},\r\n  {name: 'Environment', url: '/environment', icon: null},\r\n  {name: 'Create', url: null, icon: null},\r\n]\r\n\r\nconst breadcrumbEdit = [\r\n  {name: '', url: '/', icon: 'mdi mdi-home-outline fs-4'},\r\n  {name: 'Environment', url: '/environment', icon: null},\r\n  {name: 'Edit', url: null, icon: null},\r\n]\r\n\r\nfunction EnvironmentFormPage() {\r\n  const params = useParams()\r\n  const [environment, isLoading] = useEnvironmentDetail(params.id ? params : null);\r\n\r\n  if (isLoading) {\r\n    return <LoadingScreen />\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb\r\n        breadcrumb={params.id ? breadcrumbEdit : breadcrumbCreate}\r\n        title={params.id ? \"Environment Edit\" : \"Environment Create\"}\r\n      />\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">\r\n                  {params.id ? \"Environment Edit\" : \"Create new environment\"}\r\n                </h4>\r\n                <hr />\r\n                <EnvironmentForm environment={environment} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default EnvironmentFormPage;\r\n"],"names":["Breadcrumb","breadcrumb","title","showButton","buttonAction","buttonText","className","map","b","key","Fragment","url","to","icon","name","defaultProps","error","message","Input","forwardRef","ref","type","onChange","placeholder","errors","disabled","id","propTypes","PropTypes","displayName","Submit","label","loading","role","getEnvironments","query","GET_ENVIRONMENTS_REQUEST","payload","createEnvironmentRequest","param","CREATE_ENVIRONMENT_REQUEST","resetEnvironmentState","RESET_ENVIRONMENT","getEnvironmentDetailRequest","GET_ENVIRONMENT_DETAIL_REQUEST","updateEnvironmentRequest","UPDATE_ENVIRONMENT_REQUEST","deleteEnviromentRequest","DELETE_ENVIRONMENT_REQUEST","getSelector","state","environment","loadingSelector","listSelector","paramsSelector","getListFailedSelector","itemSelector","getItemFailedSelector","createSuccessSelector","createFailedSelector","updateSuccessSelector","updateFailedSelector","deleteSuccessSelector","deleteFailedSelector","useEnvironmentsQueryParams","useQueryParams","page","get","per_page","project_id","useMemo","order_by_created_at","undefined","useEnvironments","useFetchByParam","action","dataSelector","failedSelector","useEnvironmentsResParams","useSelector","useInitEnvironment","projects","find","e","value","baseurl","description","useCreateEnvironment","navigate","useNavigate","useSubmit","isLoading","handleSubmit","useSuccess","useFailed","values","data","useUpdateEnvironment","useResetEnvironment","useResetState","useEnvironmentDetail","useDeleteEnvironment","params","dispatch","useDispatch","getProjects","GET_PROJECTS_REQUEST","createProjectRequest","CREATE_PROJECT_REQUEST","resetProjectState","RESET_PROJECT","getProjectDetailRequest","GET_PROJECT_DETAIL_REQUEST","updateProjectRequest","UPDATE_PROJECT_REQUEST","deleteProjectRequest","DELETE_PROJECT_REQUEST","project","useProjectsQueryParams","useProjects","useProjectsResParams","useInitProject","giturl","useCreateProject","useUpdateProject","useResetProject","useProjectDetail","useDeleteProject","yup","shape","nullable","required","max","EnvironmentForm","useState","projectParams","defaultValues","useForm","resolver","yupResolver","EnvironmentFormValidation","register","setError","formState","reset","control","useEffect","loadingSubmit","onSubmit","loadingUpdate","onUpdate","optionsProject","render","field","options","ErrorMEssage","rows","breadcrumbCreate","breadcrumbEdit","useParams","LoadingScreen"],"sourceRoot":""}